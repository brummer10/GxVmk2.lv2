// generated from file './/vmk2d.dsp' by dsp2cc:
// Code generated with Faust 0.9.73 (http://faust.grame.fr)


namespace vmk2d {

class Dsp: public PluginLV2 {
private:
	uint32_t fSamplingFreq;
	int 	iVec0[2];
	int 	iConst0;
	double 	fConst1;
	double 	fConst2;
	double 	fConst3;
	double 	fConst4;
	double 	fConst5;
	double 	fConst6;
	double 	fConst7;
	double 	fConst8;
	double 	fConst9;
	double 	fConst10;
	double 	fConst11;
	double 	fConst12;
	double 	fConst13;
	double 	fConst14;
	double 	fConst15;
	double 	fConst16;
	double 	fConst17;
	double 	fConst18;
	double 	fConst19;
	double 	fConst20;
	double 	fConst21;
	double 	fConst22;
	double 	fConst23;
	double 	fConst24;
	double 	fConst25;
	double 	fConst26;
	double 	fConst27;
	double 	fConst28;
	FAUSTFLOAT 	fslider0;
	FAUSTFLOAT	*fslider0_;
	double 	fConst29;
	double 	fRec7[2];
	double 	fRec6[2];
	double 	fRec5[2];
	FAUSTFLOAT 	fslider1;
	FAUSTFLOAT	*fslider1_;
	double 	fRec4[2];
	double 	fConst30;
	double 	fConst31;
	double 	fConst32;
	double 	fConst33;
	double 	fConst34;
	double 	fConst35;
	FAUSTFLOAT 	fslider2;
	FAUSTFLOAT	*fslider2_;
	double 	fRec8[2];
	double 	fConst36;
	double 	fConst37;
	double 	fConst38;
	double 	fConst39;
	FAUSTFLOAT 	fslider3;
	FAUSTFLOAT	*fslider3_;
	double 	fRec9[2];
	double 	fConst40;
	double 	fConst41;
	double 	fConst42;
	double 	fConst43;
	double 	fConst44;
	double 	fConst45;
	double 	fConst46;
	double 	fConst47;
	double 	fConst48;
	double 	fConst49;
	double 	fConst50;
	double 	fConst51;
	double 	fConst52;
	double 	fConst53;
	double 	fConst54;
	double 	fConst55;
	double 	fConst56;
	double 	fConst57;
	double 	fConst58;
	double 	fConst59;
	double 	fConst60;
	double 	fConst61;
	double 	fConst62;
	double 	fConst63;
	double 	fConst64;
	double 	fConst65;
	double 	fConst66;
	double 	fConst67;
	double 	fConst68;
	double 	fConst69;
	double 	fConst70;
	double 	fConst71;
	double 	fConst72;
	double 	fConst73;
	double 	fConst74;
	double 	fConst75;
	double 	fConst76;
	double 	fConst77;
	double 	fConst78;
	double 	fConst79;
	double 	fConst80;
	double 	fConst81;
	double 	fConst82;
	double 	fConst83;
	double 	fConst84;
	double 	fConst85;
	double 	fConst86;
	double 	fConst87;
	double 	fConst88;
	double 	fConst89;
	double 	fConst90;
	double 	fConst91;
	double 	fConst92;
	double 	fConst93;
	double 	fConst94;
	double 	fConst95;
	double 	fConst96;
	double 	fConst97;
	double 	fConst98;
	double 	fConst99;
	double 	fConst100;
	double 	fConst101;
	double 	fConst102;
	double 	fConst103;
	double 	fConst104;
	double 	fConst105;
	double 	fConst106;
	double 	fConst107;
	double 	fConst108;
	double 	fConst109;
	double 	fConst110;
	double 	fConst111;
	double 	fConst112;
	double 	fConst113;
	double 	fConst114;
	double 	fConst115;
	double 	fConst116;
	double 	fConst117;
	double 	fConst118;
	double 	fConst119;
	double 	fConst120;
	double 	fConst121;
	double 	fRec10[6];
	double 	fConst122;
	double 	fConst123;
	double 	fConst124;
	double 	fConst125;
	double 	fConst126;
	double 	fConst127;
	double 	fConst128;
	double 	fConst129;
	double 	fConst130;
	double 	fConst131;
	double 	fConst132;
	double 	fConst133;
	double 	fConst134;
	double 	fConst135;
	double 	fConst136;
	double 	fConst137;
	double 	fConst138;
	double 	fConst139;
	double 	fConst140;
	double 	fConst141;
	double 	fConst142;
	double 	fConst143;
	double 	fConst144;
	double 	fConst145;
	double 	fConst146;
	double 	fConst147;
	double 	fConst148;
	double 	fConst149;
	double 	fConst150;
	double 	fConst151;
	double 	fConst152;
	double 	fConst153;
	double 	fConst154;
	double 	fConst155;
	double 	fConst156;
	double 	fConst157;
	double 	fConst158;
	double 	fConst159;
	double 	fConst160;
	double 	fConst161;
	FAUSTFLOAT 	fslider4;
	FAUSTFLOAT	*fslider4_;
	double 	fRec11[2];
	double 	fConst162;
	double 	fConst163;
	double 	fConst164;
	double 	fConst165;
	double 	fConst166;
	double 	fConst167;
	double 	fConst168;
	double 	fConst169;
	double 	fConst170;
	double 	fConst171;
	double 	fConst172;
	double 	fConst173;
	double 	fConst174;
	double 	fConst175;
	double 	fConst176;
	double 	fConst177;
	double 	fConst178;
	double 	fConst179;
	double 	fConst180;
	double 	fConst181;
	double 	fConst182;
	double 	fConst183;
	double 	fConst184;
	double 	fConst185;
	double 	fConst186;
	double 	fConst187;
	double 	fConst188;
	double 	fConst189;
	double 	fConst190;
	double 	fConst191;
	double 	fConst192;
	double 	fConst193;
	double 	fConst194;
	double 	fConst195;
	double 	fConst196;
	double 	fConst197;
	double 	fConst198;
	double 	fConst199;
	double 	fConst200;
	double 	fConst201;
	double 	fConst202;
	double 	fConst203;
	double 	fConst204;
	double 	fConst205;
	double 	fConst206;
	double 	fConst207;
	double 	fConst208;
	double 	fConst209;
	double 	fConst210;
	double 	fConst211;
	double 	fConst212;
	double 	fConst213;
	double 	fConst214;
	double 	fConst215;
	double 	fConst216;
	double 	fConst217;
	double 	fConst218;
	double 	fConst219;
	double 	fConst220;
	double 	fConst221;
	double 	fConst222;
	double 	fConst223;
	double 	fConst224;
	double 	fConst225;
	double 	fConst226;
	double 	fConst227;
	double 	fConst228;
	double 	fConst229;
	double 	fConst230;
	double 	fConst231;
	double 	fConst232;
	double 	fConst233;
	double 	fConst234;
	double 	fConst235;
	double 	fConst236;
	double 	fConst237;
	double 	fConst238;
	double 	fConst239;
	double 	fConst240;
	double 	fConst241;
	double 	fConst242;
	double 	fConst243;
	double 	fConst244;
	double 	fConst245;
	double 	fConst246;
	double 	fConst247;
	double 	fConst248;
	double 	fConst249;
	double 	fConst250;
	double 	fConst251;
	double 	fConst252;
	double 	fConst253;
	double 	fRec12[6];
	double 	fConst254;
	double 	fConst255;
	double 	fConst256;
	double 	fConst257;
	double 	fConst258;
	double 	fConst259;
	double 	fConst260;
	double 	fConst261;
	double 	fConst262;
	double 	fConst263;
	double 	fConst264;
	double 	fConst265;
	double 	fConst266;
	double 	fConst267;
	double 	fConst268;
	double 	fConst269;
	double 	fConst270;
	double 	fConst271;
	double 	fConst272;
	double 	fConst273;
	double 	fConst274;
	double 	fConst275;
	double 	fConst276;
	double 	fConst277;
	double 	fConst278;
	double 	fConst279;
	double 	fConst280;
	double 	fConst281;
	double 	fConst282;
	double 	fConst283;
	double 	fConst284;
	double 	fConst285;
	double 	fConst286;
	double 	fConst287;
	double 	fConst288;
	double 	fConst289;
	double 	fConst290;
	double 	fConst291;
	double 	fConst292;
	double 	fConst293;
	double 	fConst294;
	double 	fConst295;
	double 	fConst296;
	double 	fConst297;
	double 	fConst298;
	double 	fConst299;
	double 	fConst300;
	double 	fConst301;
	double 	fConst302;
	double 	fConst303;
	double 	fConst304;
	double 	fConst305;
	double 	fConst306;
	double 	fConst307;
	double 	fConst308;
	double 	fConst309;
	double 	fConst310;
	double 	fConst311;
	double 	fConst312;
	double 	fConst313;
	double 	fConst314;
	double 	fConst315;
	double 	fConst316;
	double 	fConst317;
	double 	fConst318;
	double 	fConst319;
	double 	fConst320;
	double 	fConst321;
	double 	fConst322;
	double 	fConst323;
	double 	fConst324;
	double 	fConst325;
	double 	fConst326;
	double 	fConst327;
	double 	fConst328;
	double 	fConst329;
	double 	fConst330;
	double 	fConst331;
	double 	fConst332;
	double 	fConst333;
	double 	fConst334;
	double 	fConst335;
	double 	fConst336;
	double 	fConst337;
	double 	fConst338;
	double 	fConst339;
	double 	fConst340;
	double 	fConst341;
	double 	fConst342;
	double 	fConst343;
	double 	fConst344;
	double 	fConst345;
	double 	fConst346;
	double 	fConst347;
	double 	fConst348;
	double 	fConst349;
	double 	fConst350;
	double 	fConst351;
	double 	fConst352;
	double 	fConst353;
	double 	fConst354;
	double 	fConst355;
	double 	fConst356;
	double 	fConst357;
	double 	fConst358;
	double 	fConst359;
	double 	fConst360;
	double 	fConst361;
	double 	fConst362;
	double 	fConst363;
	double 	fConst364;
	double 	fConst365;
	double 	fConst366;
	double 	fConst367;
	double 	fConst368;
	double 	fConst369;
	double 	fConst370;
	double 	fConst371;
	double 	fConst372;
	double 	fConst373;
	double 	fConst374;
	double 	fConst375;
	double 	fConst376;
	double 	fConst377;
	double 	fConst378;
	double 	fConst379;
	double 	fConst380;
	double 	fConst381;
	double 	fConst382;
	double 	fConst383;
	double 	fConst384;
	double 	fConst385;
	double 	fRec13[6];
	double 	fConst386;
	double 	fConst387;
	double 	fConst388;
	double 	fConst389;
	double 	fConst390;
	double 	fConst391;
	double 	fConst392;
	double 	fConst393;
	double 	fConst394;
	double 	fConst395;
	double 	fConst396;
	double 	fConst397;
	double 	fConst398;
	double 	fConst399;
	double 	fConst400;
	double 	fConst401;
	double 	fConst402;
	double 	fConst403;
	double 	fConst404;
	double 	fConst405;
	double 	fConst406;
	double 	fConst407;
	double 	fConst408;
	double 	fConst409;
	double 	fConst410;
	double 	fConst411;
	double 	fConst412;
	double 	fConst413;
	double 	fConst414;
	double 	fConst415;
	double 	fConst416;
	double 	fConst417;
	double 	fConst418;
	double 	fConst419;
	double 	fConst420;
	double 	fConst421;
	double 	fConst422;
	double 	fConst423;
	double 	fConst424;
	double 	fConst425;
	FAUSTFLOAT 	fslider5;
	FAUSTFLOAT	*fslider5_;
	double 	fConst426;
	double 	fConst427;
	double 	fConst428;
	double 	fConst429;
	double 	fConst430;
	double 	fConst431;
	double 	fConst432;
	double 	fConst433;
	double 	fConst434;
	double 	fConst435;
	double 	fConst436;
	double 	fConst437;
	double 	fConst438;
	double 	fConst439;
	double 	fConst440;
	double 	fConst441;
	double 	fConst442;
	double 	fConst443;
	double 	fConst444;
	double 	fConst445;
	double 	fConst446;
	double 	fConst447;
	double 	fConst448;
	double 	fConst449;
	double 	fConst450;
	double 	fConst451;
	double 	fConst452;
	double 	fConst453;
	double 	fConst454;
	double 	fConst455;
	double 	fConst456;
	double 	fConst457;
	double 	fConst458;
	double 	fConst459;
	double 	fConst460;
	double 	fConst461;
	double 	fConst462;
	double 	fConst463;
	double 	fConst464;
	double 	fConst465;
	double 	fConst466;
	double 	fConst467;
	double 	fConst468;
	double 	fConst469;
	double 	fConst470;
	double 	fConst471;
	double 	fConst472;
	double 	fConst473;
	double 	fConst474;
	double 	fConst475;
	double 	fConst476;
	double 	fConst477;
	double 	fConst478;
	double 	fConst479;
	double 	fConst480;
	double 	fConst481;
	double 	fConst482;
	double 	fConst483;
	double 	fConst484;
	double 	fConst485;
	double 	fConst486;
	double 	fConst487;
	double 	fConst488;
	double 	fConst489;
	double 	fConst490;
	double 	fConst491;
	double 	fConst492;
	double 	fConst493;
	double 	fConst494;
	double 	fConst495;
	double 	fConst496;
	double 	fConst497;
	double 	fConst498;
	double 	fConst499;
	double 	fConst500;
	double 	fConst501;
	double 	fRec14[5];
	double 	fConst502;
	double 	fConst503;
	double 	fConst504;
	double 	fConst505;
	double 	fConst506;
	double 	fConst507;
	double 	fConst508;
	double 	fConst509;
	double 	fConst510;
	double 	fConst511;
	double 	fConst512;
	double 	fConst513;
	double 	fConst514;
	double 	fConst515;
	double 	fConst516;
	double 	fConst517;
	double 	fConst518;
	double 	fConst519;
	double 	fConst520;
	double 	fConst521;
	double 	fConst522;
	double 	fConst523;
	double 	fConst524;
	double 	fConst525;
	double 	fConst526;
	double 	fConst527;
	double 	fConst528;
	double 	fConst529;
	double 	fConst530;
	double 	fConst531;
	double 	fConst532;
	double 	fConst533;
	double 	fConst534;
	double 	fConst535;
	double 	fConst536;
	double 	fConst537;
	double 	fConst538;
	double 	fConst539;
	double 	fConst540;
	double 	fConst541;
	double 	fConst542;
	double 	fConst543;
	double 	fConst544;
	double 	fConst545;
	double 	fConst546;
	double 	fConst547;
	double 	fConst548;
	double 	fConst549;
	double 	fConst550;
	double 	fConst551;
	double 	fConst552;
	double 	fConst553;
	double 	fConst554;
	double 	fConst555;
	double 	fConst556;
	double 	fConst557;
	double 	fConst558;
	double 	fConst559;
	double 	fConst560;
	double 	fConst561;
	double 	fConst562;
	double 	fConst563;
	double 	fConst564;
	double 	fConst565;
	double 	fConst566;
	double 	fConst567;
	double 	fConst568;
	double 	fConst569;
	double 	fConst570;
	double 	fConst571;
	double 	fConst572;
	double 	fConst573;
	double 	fConst574;
	double 	fConst575;
	double 	fConst576;
	double 	fConst577;
	double 	fConst578;
	double 	fConst579;
	double 	fConst580;
	double 	fConst581;
	double 	fConst582;
	double 	fConst583;
	double 	fConst584;
	double 	fConst585;
	double 	fConst586;
	double 	fConst587;
	double 	fConst588;
	double 	fConst589;
	double 	fConst590;
	double 	fConst591;
	double 	fConst592;
	double 	fConst593;
	double 	fConst594;
	double 	fConst595;
	double 	fConst596;
	double 	fConst597;
	double 	fConst598;
	double 	fConst599;
	double 	fConst600;
	double 	fConst601;
	double 	fConst602;
	double 	fConst603;
	double 	fConst604;
	double 	fConst605;
	double 	fRec15[5];
	double 	fConst606;
	double 	fConst607;
	double 	fConst608;
	double 	fConst609;
	double 	fConst610;
	double 	fConst611;
	double 	fConst612;
	double 	fConst613;
	double 	fConst614;
	double 	fConst615;
	double 	fConst616;
	double 	fConst617;
	double 	fConst618;
	double 	fConst619;
	double 	fConst620;
	double 	fConst621;
	double 	fConst622;
	double 	fConst623;
	double 	fConst624;
	double 	fConst625;
	double 	fConst626;
	double 	fConst627;
	double 	fConst628;
	double 	fConst629;
	double 	fConst630;
	double 	fConst631;
	double 	fConst632;
	double 	fConst633;
	double 	fConst634;
	double 	fConst635;
	double 	fConst636;
	double 	fConst637;
	double 	fConst638;
	double 	fConst639;
	double 	fConst640;
	double 	fConst641;
	double 	fConst642;
	double 	fConst643;
	double 	fConst644;
	double 	fConst645;
	double 	fConst646;
	double 	fConst647;
	double 	fConst648;
	double 	fConst649;
	double 	fConst650;
	double 	fConst651;
	double 	fConst652;
	double 	fConst653;
	double 	fConst654;
	double 	fConst655;
	double 	fConst656;
	double 	fConst657;
	double 	fConst658;
	double 	fConst659;
	double 	fConst660;
	double 	fConst661;
	double 	fConst662;
	double 	fConst663;
	double 	fConst664;
	double 	fConst665;
	double 	fConst666;
	double 	fConst667;
	double 	fConst668;
	double 	fConst669;
	double 	fConst670;
	double 	fConst671;
	double 	fConst672;
	double 	fConst673;
	double 	fConst674;
	double 	fConst675;
	double 	fConst676;
	double 	fConst677;
	double 	fConst678;
	double 	fConst679;
	double 	fConst680;
	double 	fConst681;
	double 	fConst682;
	double 	fConst683;
	double 	fConst684;
	double 	fConst685;
	double 	fConst686;
	double 	fConst687;
	double 	fConst688;
	double 	fConst689;
	double 	fConst690;
	double 	fConst691;
	double 	fConst692;
	double 	fConst693;
	double 	fConst694;
	double 	fConst695;
	double 	fConst696;
	double 	fConst697;
	double 	fConst698;
	double 	fConst699;
	double 	fConst700;
	double 	fConst701;
	double 	fConst702;
	double 	fConst703;
	double 	fConst704;
	double 	fConst705;
	double 	fConst706;
	double 	fConst707;
	double 	fConst708;
	double 	fConst709;
	double 	fRec16[5];
	double 	fConst710;
	double 	fConst711;
	double 	fConst712;
	double 	fConst713;
	double 	fConst714;
	double 	fConst715;
	double 	fConst716;
	double 	fConst717;
	double 	fConst718;
	double 	fConst719;
	double 	fConst720;
	double 	fConst721;
	double 	fConst722;
	double 	fConst723;
	double 	fConst724;
	double 	fConst725;
	double 	fConst726;
	double 	fConst727;
	double 	fConst728;
	double 	fConst729;
	double 	fConst730;
	double 	fConst731;
	double 	fConst732;
	double 	fConst733;
	double 	fConst734;
	double 	fConst735;
	double 	fConst736;
	double 	fConst737;
	double 	fConst738;
	FAUSTFLOAT 	fslider6;
	FAUSTFLOAT	*fslider6_;
	FAUSTFLOAT 	fslider7;
	FAUSTFLOAT	*fslider7_;
	double 	fConst739;
	double 	fConst740;
	double 	fConst741;
	double 	fConst742;
	double 	fConst743;
	FAUSTFLOAT 	fslider8;
	FAUSTFLOAT	*fslider8_;
	int 	IOTA;
	double 	fVec1[512];
	double 	fRec25[2];
	double 	fVec2[128];
	double 	fRec23[2];
	double 	fVec3[64];
	double 	fRec21[2];
	double 	fVec4[4096];
	double 	fRec19[2];
	double 	fRec20[2];
	double 	fVec5[4096];
	double 	fRec27[2];
	double 	fRec28[2];
	double 	fVec6[2048];
	double 	fRec29[2];
	double 	fRec30[2];
	double 	fVec7[2048];
	double 	fRec31[2];
	double 	fRec32[2];
	double 	fVec8[2];
	double 	fConst744;
	double 	fConst745;
	double 	fConst746;
	double 	fRec18[2];
	double 	fRec17[3];
	FAUSTFLOAT 	fslider9;
	FAUSTFLOAT	*fslider9_;
	double 	fRec3[4];
	double 	fConst747;
	double 	fConst748;
	double 	fConst749;
	double 	fConst750;
	double 	fConst751;
	double 	fConst752;
	double 	fConst753;
	double 	fRec2[3];
	double 	fRec1[3];
	double 	fConst754;
	double 	fConst755;
	double 	fConst756;
	double 	fRec0[3];
	double 	fConst757;
	void connect(uint32_t port,void* data);
	void clear_state_f();
	void init(uint32_t samplingFreq);
	void compute(int count, FAUSTFLOAT *input0, FAUSTFLOAT *output0);

	static void clear_state_f_static(PluginLV2*);
	static void init_static(uint32_t samplingFreq, PluginLV2*);
	static void compute_static(int count, FAUSTFLOAT *input0, FAUSTFLOAT *output0, PluginLV2*);
	static void del_instance(PluginLV2 *p);
	static void connect_static(uint32_t port,void* data, PluginLV2 *p);
public:
	Dsp();
	~Dsp();
};



Dsp::Dsp()
	: PluginLV2() {
	version = PLUGINLV2_VERSION;
	id = "mk2d";
	name = N_("MK2Driver");
	mono_audio = compute_static;
	stereo_audio = 0;
	set_samplerate = init_static;
	activate_plugin = 0;
	connect_ports = connect_static;
	clear_state = clear_state_f_static;
	delete_instance = del_instance;
}

Dsp::~Dsp() {
}

inline void Dsp::clear_state_f()
{
	for (int i=0; i<2; i++) iVec0[i] = 0;
	for (int i=0; i<2; i++) fRec7[i] = 0;
	for (int i=0; i<2; i++) fRec6[i] = 0;
	for (int i=0; i<2; i++) fRec5[i] = 0;
	for (int i=0; i<2; i++) fRec4[i] = 0;
	for (int i=0; i<2; i++) fRec8[i] = 0;
	for (int i=0; i<2; i++) fRec9[i] = 0;
	for (int i=0; i<6; i++) fRec10[i] = 0;
	for (int i=0; i<2; i++) fRec11[i] = 0;
	for (int i=0; i<6; i++) fRec12[i] = 0;
	for (int i=0; i<6; i++) fRec13[i] = 0;
	for (int i=0; i<5; i++) fRec14[i] = 0;
	for (int i=0; i<5; i++) fRec15[i] = 0;
	for (int i=0; i<5; i++) fRec16[i] = 0;
	for (int i=0; i<512; i++) fVec1[i] = 0;
	for (int i=0; i<2; i++) fRec25[i] = 0;
	for (int i=0; i<128; i++) fVec2[i] = 0;
	for (int i=0; i<2; i++) fRec23[i] = 0;
	for (int i=0; i<64; i++) fVec3[i] = 0;
	for (int i=0; i<2; i++) fRec21[i] = 0;
	for (int i=0; i<4096; i++) fVec4[i] = 0;
	for (int i=0; i<2; i++) fRec19[i] = 0;
	for (int i=0; i<2; i++) fRec20[i] = 0;
	for (int i=0; i<4096; i++) fVec5[i] = 0;
	for (int i=0; i<2; i++) fRec27[i] = 0;
	for (int i=0; i<2; i++) fRec28[i] = 0;
	for (int i=0; i<2048; i++) fVec6[i] = 0;
	for (int i=0; i<2; i++) fRec29[i] = 0;
	for (int i=0; i<2; i++) fRec30[i] = 0;
	for (int i=0; i<2048; i++) fVec7[i] = 0;
	for (int i=0; i<2; i++) fRec31[i] = 0;
	for (int i=0; i<2; i++) fRec32[i] = 0;
	for (int i=0; i<2; i++) fVec8[i] = 0;
	for (int i=0; i<2; i++) fRec18[i] = 0;
	for (int i=0; i<3; i++) fRec17[i] = 0;
	for (int i=0; i<4; i++) fRec3[i] = 0;
	for (int i=0; i<3; i++) fRec2[i] = 0;
	for (int i=0; i<3; i++) fRec1[i] = 0;
	for (int i=0; i<3; i++) fRec0[i] = 0;
}

void Dsp::clear_state_f_static(PluginLV2 *p)
{
	static_cast<Dsp*>(p)->clear_state_f();
}

inline void Dsp::init(uint32_t samplingFreq)
{
	fSamplingFreq = samplingFreq;
	iConst0 = min(192000, max(1, fSamplingFreq));
	fConst1 = tan((376.99111843077515 / double(iConst0)));
	fConst2 = (1.0 / faustpower<2>(fConst1));
	fConst3 = (2 * (1 - fConst2));
	fConst4 = (1.0 / fConst1);
	fConst5 = (1 + ((fConst4 - 1.414213562373095) / fConst1));
	fConst6 = (1.0 / (1 + ((1.414213562373095 + fConst4) / fConst1)));
	fConst7 = tan((1256.6370614359173 / double(iConst0)));
	fConst8 = (2 * (1 - (1.0 / faustpower<2>(fConst7))));
	fConst9 = (1.0 / double(iConst0));
	fConst10 = double(fConst9);
	fConst11 = (fConst10 / sin((2513.2741228718346 * fConst10)));
	fConst12 = (7066.589504111799 * fConst11);
	fConst13 = (1.0 / fConst7);
	fConst14 = (1 + ((fConst13 - fConst12) / fConst7));
	fConst15 = (1.0 / (1 + ((fConst12 + fConst13) / fConst7)));
	fConst16 = tan((17278.75959474386 / double(iConst0)));
	fConst17 = (2 * (1 - (1.0 / faustpower<2>(fConst16))));
	fConst18 = (1.0 / fConst16);
	fConst19 = (1 + ((fConst18 - 1.414213562373095) / fConst16));
	fConst20 = (1.0 / (1 + ((1.414213562373095 + fConst18) / fConst16)));
	fConst21 = double(iConst0);
	fConst22 = (9.03791617470279e-15 * fConst21);
	fConst23 = (1.59962462431754e-12 + (fConst21 * ((fConst21 * (2.07776698204537e-13 - fConst22)) - 1.18527096234434e-12)));
	fConst24 = (2.71137485241084e-14 * fConst21);
	fConst25 = (4.79887387295262e-12 + (fConst21 * ((fConst21 * (fConst24 - 2.07776698204537e-13)) - 1.18527096234434e-12)));
	fConst26 = (4.79887387295262e-12 + (fConst21 * (1.18527096234434e-12 + (fConst21 * (0 - (2.07776698204537e-13 + fConst24))))));
	fConst27 = (1.59962462431754e-12 + (fConst21 * (1.18527096234434e-12 + (fConst21 * (2.07776698204537e-13 + fConst22)))));
	fConst28 = (1.0 / fConst27);
	fConst29 = (62.83185307179586 / double(iConst0));
	fConst30 = (1.12999012445903e-25 * fConst21);
	fConst31 = (2.66484219976024e-11 + (fConst21 * (4.41618359682262e-14 + (fConst21 * (7.48045274057643e-18 + (fConst21 * (1.10698090525809e-21 + fConst30)))))));
	fConst32 = (3.68475040584466e-27 * fConst21);
	fConst33 = (5.57830269773706e-14 + (fConst21 * (5.02968430397797e-16 + (fConst21 * (7.11566245039781e-19 + (fConst21 * (1.0867966613683e-22 + fConst32)))))));
	fConst34 = (4.09416711760518e-27 * fConst21);
	fConst35 = ((fConst21 * ((fConst21 * ((fConst21 * (0 - (1.23029721884036e-22 + fConst34))) - 7.45138415404143e-19)) - 1.49437099792589e-16)) - 5.11770889700648e-15);
	fConst36 = (4.09416711760518e-25 * fConst21);
	fConst37 = (fConst21 * (1.12589595734143e-14 + (fConst21 * (7.41044248286538e-17 + (fConst21 * (1.23234430239916e-20 + fConst36))))));
	fConst38 = (4.05322544642913e-25 * fConst21);
	fConst39 = ((fConst21 * ((fConst21 * ((fConst21 * (0 - (1.22210888460515e-20 + fConst38))) - 7.39815998151256e-17)) - 1.48413558013188e-14)) - 5.11770889700648e-13);
	fConst40 = (3.27533369408415e-25 * fConst21);
	fConst41 = ((fConst21 * ((fConst21 * ((fConst21 * (0 - (1.17052237892332e-20 + fConst40))) - 7.81576502750829e-17)) - 4.80041094539208e-14)) - 5.11770889700648e-12);
	fConst42 = (3.2384861900257e-25 * fConst21);
	fConst43 = (5.57830269773706e-12 + (fConst21 * (5.12282660590348e-14 + (fConst21 * (7.80471077629076e-17 + (fConst21 * (1.16131050290871e-20 + fConst42)))))));
	fConst44 = (1.22513856827217e-23 * fConst21);
	fConst45 = (2.84032843783859e-07 + (fConst21 * (2.7103898089436e-09 + (fConst21 * (4.75547746127636e-12 + (fConst21 * (8.06548875084662e-16 + (fConst21 * (1.19377724815132e-19 + fConst44)))))))));
	fConst46 = (1.23643846951676e-23 * fConst21);
	fConst47 = ((fConst21 * ((fConst21 * ((fConst21 * ((fConst21 * (0 - (1.19860836535009e-19 + fConst46))) - 8.08250001522027e-16)) - 4.76131164941895e-12)) - 2.51330683931988e-09)) - 2.55885444850324e-07);
	fConst48 = (1.0235417794013e-26 * fConst21);
	fConst49 = ((fConst21 * (2.58444299298827e-15 + (fConst21 * ((fConst21 * (1.0286594882983e-22 - fConst48)) - 2.63562008195834e-19)))) - 1.27942722425162e-11);
	fConst50 = (1.0235417794013e-23 * fConst21);
	fConst51 = ((fConst21 * (1.0235417794013e-17 + (fConst21 * (fConst50 - 5.22006307494661e-20)))) - 2.55885444850324e-14);
	fConst52 = (1.01330636160728e-23 * fConst21);
	fConst53 = (2.55885444850324e-14 + (fConst21 * ((fConst21 * (5.22006307494661e-20 - fConst52)) - 1.27942722425162e-17)));
	fConst54 = (1.0235417794013e-25 * fConst21);
	fConst55 = (2.55885444850324e-16 + (fConst21 * ((fConst21 * (5.16888598597654e-22 - fConst54)) - 7.67656334550972e-20)));
	fConst56 = (2.04708355880259e-24 * fConst21);
	fConst57 = (1.27942722425162e-09 + (fConst21 * ((fConst21 * (7.77891752344985e-17 + (fConst21 * (fConst56 - 1.54554808689596e-20)))) - 5.14329744149151e-13)));
	fConst58 = (2.03684814100858e-24 * fConst21);
	fConst59 = ((fConst21 * (5.14329744149151e-13 + (fConst21 * ((fConst21 * (1.54554808689596e-20 - fConst58)) - 7.80450606793488e-17)))) - 1.27942722425162e-09);
	fConst60 = ((fConst21 * (4.41618359682262e-14 + (fConst21 * ((fConst21 * (1.10698090525809e-21 - fConst30)) - 7.48045274057643e-18)))) - 2.66484219976024e-11);
	fConst61 = ((fConst21 * (5.02968430397797e-16 + (fConst21 * ((fConst21 * (1.0867966613683e-22 - fConst32)) - 7.11566245039781e-19)))) - 5.57830269773706e-14);
	fConst62 = (5.11770889700648e-15 + (fConst21 * ((fConst21 * (7.45138415404143e-19 + (fConst21 * (fConst34 - 1.23029721884036e-22)))) - 1.49437099792589e-16)));
	fConst63 = (fConst21 * (1.12589595734143e-14 + (fConst21 * ((fConst21 * (1.23234430239916e-20 - fConst36)) - 7.41044248286538e-17))));
	fConst64 = (5.11770889700648e-13 + (fConst21 * ((fConst21 * (7.39815998151256e-17 + (fConst21 * (fConst38 - 1.22210888460515e-20)))) - 1.48413558013188e-14)));
	fConst65 = (5.11770889700648e-12 + (fConst21 * ((fConst21 * (7.81576502750829e-17 + (fConst21 * (fConst40 - 1.17052237892332e-20)))) - 4.80041094539208e-14)));
	fConst66 = ((fConst21 * (5.12282660590348e-14 + (fConst21 * ((fConst21 * (1.16131050290871e-20 - fConst42)) - 7.80471077629076e-17)))) - 5.57830269773706e-12);
	fConst67 = (2.84032843783859e-07 + (fConst21 * ((fConst21 * (4.75547746127636e-12 + (fConst21 * ((fConst21 * (1.19377724815132e-19 - fConst44)) - 8.06548875084662e-16)))) - 2.7103898089436e-09)));
	fConst68 = ((fConst21 * (2.51330683931988e-09 + (fConst21 * ((fConst21 * (8.08250001522027e-16 + (fConst21 * (fConst46 - 1.19860836535009e-19)))) - 4.76131164941895e-12)))) - 2.55885444850324e-07);
	fConst69 = (5.64995062229515e-25 * fConst21);
	fConst70 = ((fConst21 * (4.41618359682262e-14 + (fConst21 * (7.48045274057643e-18 + (fConst21 * (fConst69 - 3.32094271577427e-21)))))) - 7.99452659928073e-11);
	fConst71 = (1.84237520292233e-26 * fConst21);
	fConst72 = ((fConst21 * (5.02968430397797e-16 + (fConst21 * (7.11566245039781e-19 + (fConst21 * (fConst71 - 3.26038998410489e-22)))))) - 1.67349080932112e-13);
	fConst73 = (2.04708355880259e-26 * fConst21);
	fConst74 = (1.53531266910194e-14 + (fConst21 * ((fConst21 * ((fConst21 * (3.69089165652107e-22 - fConst73)) - 7.45138415404143e-19)) - 1.49437099792589e-16)));
	fConst75 = (fConst21 * (1.12589595734143e-14 + (fConst21 * (7.41044248286538e-17 + (fConst21 * (fConst56 - 3.69703290719748e-20))))));
	fConst76 = (2.02661272321456e-24 * fConst21);
	fConst77 = (1.53531266910194e-12 + (fConst21 * ((fConst21 * ((fConst21 * (3.66632665381544e-20 - fConst76)) - 7.39815998151256e-17)) - 1.48413558013188e-14)));
	fConst78 = (1.63766684704207e-24 * fConst21);
	fConst79 = (1.53531266910194e-11 + (fConst21 * ((fConst21 * ((fConst21 * (3.51156713676996e-20 - fConst78)) - 7.81576502750829e-17)) - 4.80041094539208e-14)));
	fConst80 = (1.61924309501285e-24 * fConst21);
	fConst81 = ((fConst21 * (5.12282660590348e-14 + (fConst21 * (7.80471077629076e-17 + (fConst21 * (fConst80 - 3.48393150872613e-20)))))) - 1.67349080932112e-11);
	fConst82 = (6.12569284136087e-23 * fConst21);
	fConst83 = (1.4201642189193e-06 + (fConst21 * ((fConst21 * (4.75547746127636e-12 + (fConst21 * (8.06548875084662e-16 + (fConst21 * (fConst82 - 3.58133174445396e-19)))))) - 8.1311694268308e-09)));
	fConst84 = (6.18219234758382e-23 * fConst21);
	fConst85 = ((fConst21 * (7.53992051795964e-09 + (fConst21 * ((fConst21 * ((fConst21 * (3.59582509605028e-19 - fConst84)) - 8.08250001522027e-16)) - 4.76131164941895e-12)))) - 1.27942722425162e-06);
	fConst86 = (1.12999012445903e-24 * fConst21);
	fConst87 = ((fConst21 * ((fConst21 * (1.49609054811529e-17 + (fConst21 * (2.21396181051618e-21 - fConst86)))) - 8.83236719364525e-14)) - 5.32968439952049e-11);
	fConst88 = (3.68475040584466e-26 * fConst21);
	fConst89 = ((fConst21 * ((fConst21 * (1.42313249007956e-18 + (fConst21 * (2.17359332273659e-22 - fConst88)))) - 1.00593686079559e-15)) - 1.11566053954741e-13);
	fConst90 = (4.09416711760518e-26 * fConst21);
	fConst91 = (1.0235417794013e-14 + (fConst21 * (2.98874199585178e-16 + (fConst21 * ((fConst21 * (fConst90 - 2.46059443768071e-22)) - 1.49027683080829e-18)))));
	fConst92 = (4.09416711760518e-24 * fConst21);
	fConst93 = (fConst21 * ((fConst21 * (1.48208849657308e-16 + (fConst21 * (2.46468860479832e-20 - fConst92)))) - 2.25179191468285e-14));
	fConst94 = (4.05322544642913e-24 * fConst21);
	fConst95 = (1.0235417794013e-12 + (fConst21 * (2.96827116026376e-14 + (fConst21 * ((fConst21 * (fConst94 - 2.44421776921029e-20)) - 1.47963199630251e-16)))));
	fConst96 = (3.27533369408415e-24 * fConst21);
	fConst97 = (1.0235417794013e-11 + (fConst21 * (9.60082189078415e-14 + (fConst21 * ((fConst21 * (fConst96 - 2.34104475784664e-20)) - 1.56315300550166e-16)))));
	fConst98 = (3.2384861900257e-24 * fConst21);
	fConst99 = ((fConst21 * ((fConst21 * (1.56094215525815e-16 + (fConst21 * (2.32262100581742e-20 - fConst98)))) - 1.0245653211807e-13)) - 1.11566053954741e-11);
	fConst100 = (1.22513856827217e-22 * fConst21);
	fConst101 = (2.84032843783859e-06 + (fConst21 * ((fConst21 * ((fConst21 * (1.61309775016932e-15 + (fConst21 * (2.38755449630264e-19 - fConst100)))) - 9.51095492255272e-12)) - 5.4207796178872e-09)));
	fConst102 = (1.23643846951676e-22 * fConst21);
	fConst103 = ((fConst21 * (5.02661367863976e-09 + (fConst21 * (9.52262329883789e-12 + (fConst21 * ((fConst21 * (fConst102 - 2.39721673070019e-19)) - 1.61650000304405e-15)))))) - 2.55885444850324e-06);
	fConst104 = (5.32968439952049e-11 + (fConst21 * ((fConst21 * ((fConst21 * (2.21396181051618e-21 + fConst86)) - 1.49609054811529e-17)) - 8.83236719364525e-14)));
	fConst105 = (1.11566053954741e-13 + (fConst21 * ((fConst21 * ((fConst21 * (2.17359332273659e-22 + fConst88)) - 1.42313249007956e-18)) - 1.00593686079559e-15)));
	fConst106 = ((fConst21 * (2.98874199585178e-16 + (fConst21 * (1.49027683080829e-18 + (fConst21 * (0 - (2.46059443768071e-22 + fConst90))))))) - 1.0235417794013e-14);
	fConst107 = (fConst21 * ((fConst21 * ((fConst21 * (2.46468860479832e-20 + fConst92)) - 1.48208849657308e-16)) - 2.25179191468285e-14));
	fConst108 = ((fConst21 * (2.96827116026376e-14 + (fConst21 * (1.47963199630251e-16 + (fConst21 * (0 - (2.44421776921029e-20 + fConst94))))))) - 1.0235417794013e-12);
	fConst109 = ((fConst21 * (9.60082189078415e-14 + (fConst21 * (1.56315300550166e-16 + (fConst21 * (0 - (2.34104475784664e-20 + fConst96))))))) - 1.0235417794013e-11);
	fConst110 = (1.11566053954741e-11 + (fConst21 * ((fConst21 * ((fConst21 * (2.32262100581742e-20 + fConst98)) - 1.56094215525815e-16)) - 1.0245653211807e-13)));
	fConst111 = (2.84032843783859e-06 + (fConst21 * (5.4207796178872e-09 + (fConst21 * ((fConst21 * ((fConst21 * (2.38755449630264e-19 + fConst100)) - 1.61309775016932e-15)) - 9.51095492255272e-12)))));
	fConst112 = ((fConst21 * ((fConst21 * (9.52262329883789e-12 + (fConst21 * (1.61650000304405e-15 + (fConst21 * (0 - (2.39721673070019e-19 + fConst102))))))) - 5.02661367863976e-09)) - 2.55885444850324e-06);
	fConst113 = (7.99452659928073e-11 + (fConst21 * (4.41618359682262e-14 + (fConst21 * ((fConst21 * (0 - (3.32094271577427e-21 + fConst69))) - 7.48045274057643e-18)))));
	fConst114 = (1.67349080932112e-13 + (fConst21 * (5.02968430397797e-16 + (fConst21 * ((fConst21 * (0 - (3.26038998410489e-22 + fConst71))) - 7.11566245039781e-19)))));
	fConst115 = ((fConst21 * ((fConst21 * (7.45138415404143e-19 + (fConst21 * (3.69089165652107e-22 + fConst73)))) - 1.49437099792589e-16)) - 1.53531266910194e-14);
	fConst116 = (fConst21 * (1.12589595734143e-14 + (fConst21 * ((fConst21 * (0 - (3.69703290719748e-20 + fConst56))) - 7.41044248286538e-17))));
	fConst117 = ((fConst21 * ((fConst21 * (7.39815998151256e-17 + (fConst21 * (3.66632665381544e-20 + fConst76)))) - 1.48413558013188e-14)) - 1.53531266910194e-12);
	fConst118 = ((fConst21 * ((fConst21 * (7.81576502750829e-17 + (fConst21 * (3.51156713676996e-20 + fConst78)))) - 4.80041094539208e-14)) - 1.53531266910194e-11);
	fConst119 = (1.67349080932112e-11 + (fConst21 * (5.12282660590348e-14 + (fConst21 * ((fConst21 * (0 - (3.48393150872613e-20 + fConst80))) - 7.80471077629076e-17)))));
	fConst120 = (1.4201642189193e-06 + (fConst21 * (8.1311694268308e-09 + (fConst21 * (4.75547746127636e-12 + (fConst21 * ((fConst21 * (0 - (3.58133174445396e-19 + fConst82))) - 8.06548875084662e-16)))))));
	fConst121 = ((fConst21 * ((fConst21 * ((fConst21 * (8.08250001522027e-16 + (fConst21 * (3.59582509605028e-19 + fConst84)))) - 4.76131164941895e-12)) - 7.53992051795964e-09)) - 1.27942722425162e-06);
	fConst122 = (5.11770889700648e-26 * fConst21);
	fConst123 = ((fConst21 * (2.58444299298827e-15 + (fConst21 * (2.63562008195834e-19 + (fConst21 * (fConst122 - 3.08597846489491e-22)))))) - 3.83828167275486e-11);
	fConst124 = (5.11770889700648e-23 * fConst21);
	fConst125 = ((fConst21 * ((fConst21 * (1.56601892248398e-19 - fConst124)) - 1.0235417794013e-17)) - 2.55885444850324e-14);
	fConst126 = (5.06653180803641e-23 * fConst21);
	fConst127 = (2.55885444850324e-14 + (fConst21 * (1.27942722425162e-17 + (fConst21 * (fConst126 - 1.56601892248398e-19)))));
	fConst128 = (5.11770889700648e-25 * fConst21);
	fConst129 = (2.55885444850324e-16 + (fConst21 * (7.67656334550972e-20 + (fConst21 * (fConst128 - 1.55066579579296e-21)))));
	fConst130 = (3.83828167275486e-09 + (fConst21 * ((fConst21 * ((fConst21 * (4.63664426068787e-20 - fConst50)) - 7.77891752344985e-17)) - 5.14329744149151e-13)));
	fConst131 = (1.01842407050429e-23 * fConst21);
	fConst132 = ((fConst21 * (5.14329744149151e-13 + (fConst21 * (7.80450606793488e-17 + (fConst21 * (fConst131 - 4.63664426068787e-20)))))) - 3.83828167275486e-09);
	fConst133 = ((fConst21 * ((fConst21 * (5.27124016391667e-19 + (fConst21 * (2.0573189765966e-22 - fConst54)))) - 5.16888598597654e-15)) - 2.55885444850324e-11);
	fConst134 = (1.0235417794013e-22 * fConst21);
	fConst135 = (5.11770889700648e-14 + (fConst21 * ((fConst21 * (fConst134 - 1.04401261498932e-19)) - 2.04708355880259e-17)));
	fConst136 = (1.01330636160728e-22 * fConst21);
	fConst137 = ((fConst21 * (2.55885444850324e-17 + (fConst21 * (1.04401261498932e-19 - fConst136)))) - 5.11770889700648e-14);
	fConst138 = (1.0235417794013e-24 * fConst21);
	fConst139 = ((fConst21 * (1.53531266910194e-19 + (fConst21 * (1.03377719719531e-21 - fConst138)))) - 5.11770889700648e-16);
	fConst140 = (2.04708355880259e-23 * fConst21);
	fConst141 = (2.55885444850324e-09 + (fConst21 * (1.0286594882983e-12 + (fConst21 * ((fConst21 * (fConst140 - 3.09109617379191e-20)) - 1.55578350468997e-16)))));
	fConst142 = (2.03684814100858e-23 * fConst21);
	fConst143 = ((fConst21 * ((fConst21 * (1.56090121358698e-16 + (fConst21 * (3.09109617379191e-20 - fConst142)))) - 1.0286594882983e-12)) - 2.55885444850324e-09);
	fConst144 = (2.55885444850324e-11 + (fConst21 * ((fConst21 * ((fConst21 * (2.0573189765966e-22 + fConst54)) - 5.27124016391667e-19)) - 5.16888598597654e-15)));
	fConst145 = (5.11770889700648e-14 + (fConst21 * (2.04708355880259e-17 + (fConst21 * (0 - (1.04401261498932e-19 + fConst134))))));
	fConst146 = ((fConst21 * ((fConst21 * (1.04401261498932e-19 + fConst136)) - 2.55885444850324e-17)) - 5.11770889700648e-14);
	fConst147 = ((fConst21 * ((fConst21 * (1.03377719719531e-21 + fConst138)) - 1.53531266910194e-19)) - 5.11770889700648e-16);
	fConst148 = ((fConst21 * (1.0286594882983e-12 + (fConst21 * (1.55578350468997e-16 + (fConst21 * (0 - (3.09109617379191e-20 + fConst140))))))) - 2.55885444850324e-09);
	fConst149 = (2.55885444850324e-09 + (fConst21 * ((fConst21 * ((fConst21 * (3.09109617379191e-20 + fConst142)) - 1.56090121358698e-16)) - 1.0286594882983e-12)));
	fConst150 = (3.83828167275486e-11 + (fConst21 * (2.58444299298827e-15 + (fConst21 * ((fConst21 * (0 - (3.08597846489491e-22 + fConst122))) - 2.63562008195834e-19)))));
	fConst151 = ((fConst21 * (1.0235417794013e-17 + (fConst21 * (1.56601892248398e-19 + fConst124)))) - 2.55885444850324e-14);
	fConst152 = (2.55885444850324e-14 + (fConst21 * ((fConst21 * (0 - (1.56601892248398e-19 + fConst126))) - 1.27942722425162e-17)));
	fConst153 = (2.55885444850324e-16 + (fConst21 * ((fConst21 * (0 - (1.55066579579296e-21 + fConst128))) - 7.67656334550972e-20)));
	fConst154 = ((fConst21 * ((fConst21 * (7.77891752344985e-17 + (fConst21 * (4.63664426068787e-20 + fConst50)))) - 5.14329744149151e-13)) - 3.83828167275486e-09);
	fConst155 = (3.83828167275486e-09 + (fConst21 * (5.14329744149151e-13 + (fConst21 * ((fConst21 * (0 - (4.63664426068787e-20 + fConst131))) - 7.80450606793488e-17)))));
	fConst156 = (1.27942722425162e-11 + (fConst21 * (2.58444299298827e-15 + (fConst21 * (2.63562008195834e-19 + (fConst21 * (1.0286594882983e-22 + fConst48)))))));
	fConst157 = ((fConst21 * ((fConst21 * (0 - (5.22006307494661e-20 + fConst50))) - 1.0235417794013e-17)) - 2.55885444850324e-14);
	fConst158 = (2.55885444850324e-14 + (fConst21 * (1.27942722425162e-17 + (fConst21 * (5.22006307494661e-20 + fConst52)))));
	fConst159 = (2.55885444850324e-16 + (fConst21 * (7.67656334550972e-20 + (fConst21 * (5.16888598597654e-22 + fConst54)))));
	fConst160 = ((fConst21 * ((fConst21 * ((fConst21 * (0 - (1.54554808689596e-20 + fConst56))) - 7.77891752344985e-17)) - 5.14329744149151e-13)) - 1.27942722425162e-09);
	fConst161 = (1.27942722425162e-09 + (fConst21 * (5.14329744149151e-13 + (fConst21 * (7.80450606793488e-17 + (fConst21 * (1.54554808689596e-20 + fConst58)))))));
	fConst162 = (1.18330530969519e-25 * fConst21);
	fConst163 = (5.94203392954467e-12 + (fConst21 * (9.92898924376863e-15 + (fConst21 * (2.17075680616335e-18 + (fConst21 * (9.73577852885708e-22 + fConst162)))))));
	fConst164 = (3.85860427074518e-27 * fConst21);
	fConst165 = (5.84149813210035e-14 + (fConst21 * (5.26699482956717e-16 + (fConst21 * (7.45139358061681e-19 + (fConst21 * (1.1380738929659e-22 + fConst164)))))));
	fConst166 = (4.28733807860576e-27 * fConst21);
	fConst167 = ((fConst21 * ((fConst21 * ((fConst21 * (0 - (1.28834509262103e-22 + fConst166))) - 7.80295530306248e-19)) - 1.5648783986911e-16)) - 5.3591725982572e-15);
	fConst168 = (4.28733807860576e-25 * fConst21);
	fConst169 = (fConst21 * (1.17901797161658e-14 + (fConst21 * (7.76008192227642e-17 + (fConst21 * (1.29048876166033e-20 + fConst168))))));
	fConst170 = (4.2444646978197e-25 * fConst21);
	fConst171 = ((fConst21 * ((fConst21 * ((fConst21 * (0 - (1.27977041646382e-20 + fConst170))) - 7.74721990804061e-17)) - 1.55416005349459e-14)) - 5.3591725982572e-13);
	fConst172 = (3.42987046288461e-25 * fConst21);
	fConst173 = ((fConst21 * ((fConst21 * ((fConst21 * (0 - (1.22574995667339e-20 + fConst172))) - 8.18452839205839e-17)) - 5.02690389716525e-14)) - 5.3591725982572e-12);
	fConst174 = (3.39128442017716e-25 * fConst21);
	fConst175 = (5.84149813210035e-12 + (fConst21 * (5.36453177085546e-14 + (fConst21 * (8.17295257924616e-17 + (fConst21 * (1.21610344599652e-20 + fConst174)))))));
	fConst176 = (1.28294304664199e-23 * fConst21);
	fConst177 = (6.32838466389946e-08 + (fConst21 * (6.04351613406486e-10 + (fConst21 * (1.06857112561395e-12 + (fConst21 * (2.3142517311553e-16 + (fConst21 * (1.04945005388316e-19 + fConst176)))))))));
	fConst178 = (1.29477609973894e-23 * fConst21);
	fConst179 = ((fConst21 * ((fConst21 * ((fConst21 * ((fConst21 * (0 - (1.05265278664784e-19 + fConst178))) - 2.28565746666998e-16)) - 1.06911160387173e-12)) - 5.60398416354354e-10)) - 5.70124744495447e-08);
	fConst180 = (1.07183451965144e-26 * fConst21);
	fConst181 = ((fConst21 * (5.96920607486733e-16 + (fConst21 * ((fConst21 * (1.0771936922497e-22 - fConst180)) - 2.75997388810246e-19)))) - 2.85062372247723e-12);
	fConst182 = (1.07183451965144e-23 * fConst21);
	fConst183 = ((fConst21 * (1.07183451965144e-17 + (fConst21 * (fConst182 - 5.46635605022234e-20)))) - 2.6795862991286e-14);
	fConst184 = (1.06111617445493e-23 * fConst21);
	fConst185 = (2.6795862991286e-14 + (fConst21 * ((fConst21 * (5.46635605022234e-20 - fConst184)) - 1.3397931495643e-17)));
	fConst186 = (1.07183451965144e-25 * fConst21);
	fConst187 = (2.6795862991286e-16 + (fConst21 * ((fConst21 * (5.41276432423977e-22 - fConst186)) - 8.0387588973858e-20)));
	fConst188 = (2.14366903930288e-24 * fConst21);
	fConst189 = (2.85062372247723e-10 + (fConst21 * ((fConst21 * (3.92701924008464e-17 + (fConst21 * (fConst188 - 1.61847012467367e-20)))) - 1.16704535198218e-13)));
	fConst190 = (2.13295069410637e-24 * fConst21);
	fConst191 = ((fConst21 * (1.16704535198218e-13 + (fConst21 * ((fConst21 * (1.61847012467367e-20 - fConst190)) - 3.95381510307592e-17)))) - 2.85062372247723e-10);
	fConst192 = ((fConst21 * (9.92898924376863e-15 + (fConst21 * ((fConst21 * (9.73577852885708e-22 - fConst162)) - 2.17075680616335e-18)))) - 5.94203392954467e-12);
	fConst193 = ((fConst21 * (5.26699482956717e-16 + (fConst21 * ((fConst21 * (1.1380738929659e-22 - fConst164)) - 7.45139358061681e-19)))) - 5.84149813210035e-14);
	fConst194 = (5.3591725982572e-15 + (fConst21 * ((fConst21 * (7.80295530306248e-19 + (fConst21 * (fConst166 - 1.28834509262103e-22)))) - 1.5648783986911e-16)));
	fConst195 = (fConst21 * (1.17901797161658e-14 + (fConst21 * ((fConst21 * (1.29048876166033e-20 - fConst168)) - 7.76008192227642e-17))));
	fConst196 = (5.3591725982572e-13 + (fConst21 * ((fConst21 * (7.74721990804061e-17 + (fConst21 * (fConst170 - 1.27977041646382e-20)))) - 1.55416005349459e-14)));
	fConst197 = (5.3591725982572e-12 + (fConst21 * ((fConst21 * (8.18452839205839e-17 + (fConst21 * (fConst172 - 1.22574995667339e-20)))) - 5.02690389716525e-14)));
	fConst198 = ((fConst21 * (5.36453177085546e-14 + (fConst21 * ((fConst21 * (1.21610344599652e-20 - fConst174)) - 8.17295257924616e-17)))) - 5.84149813210035e-12);
	fConst199 = (6.32838466389946e-08 + (fConst21 * ((fConst21 * (1.06857112561395e-12 + (fConst21 * ((fConst21 * (1.04945005388316e-19 - fConst176)) - 2.3142517311553e-16)))) - 6.04351613406486e-10)));
	fConst200 = ((fConst21 * (5.60398416354354e-10 + (fConst21 * ((fConst21 * (2.28565746666998e-16 + (fConst21 * (fConst178 - 1.05265278664784e-19)))) - 1.06911160387173e-12)))) - 5.70124744495447e-08);
	fConst201 = (5.91652654847595e-25 * fConst21);
	fConst202 = ((fConst21 * (9.92898924376863e-15 + (fConst21 * (2.17075680616335e-18 + (fConst21 * (fConst201 - 2.92073355865712e-21)))))) - 1.7826101788634e-11);
	fConst203 = (1.92930213537259e-26 * fConst21);
	fConst204 = ((fConst21 * (5.26699482956717e-16 + (fConst21 * (7.45139358061681e-19 + (fConst21 * (fConst203 - 3.4142216788977e-22)))))) - 1.7524494396301e-13);
	fConst205 = (2.14366903930288e-26 * fConst21);
	fConst206 = (1.60775177947716e-14 + (fConst21 * ((fConst21 * ((fConst21 * (3.86503527786309e-22 - fConst205)) - 7.80295530306248e-19)) - 1.5648783986911e-16)));
	fConst207 = (fConst21 * (1.17901797161658e-14 + (fConst21 * (7.76008192227642e-17 + (fConst21 * (fConst188 - 3.871466284981e-20))))));
	fConst208 = (2.12223234890985e-24 * fConst21);
	fConst209 = (1.60775177947716e-12 + (fConst21 * ((fConst21 * ((fConst21 * (3.83931124939146e-20 - fConst208)) - 7.74721990804061e-17)) - 1.55416005349459e-14)));
	fConst210 = (1.7149352314423e-24 * fConst21);
	fConst211 = (1.60775177947716e-11 + (fConst21 * ((fConst21 * ((fConst21 * (3.67724987002016e-20 - fConst210)) - 8.18452839205839e-17)) - 5.02690389716525e-14)));
	fConst212 = (1.69564221008858e-24 * fConst21);
	fConst213 = ((fConst21 * (5.36453177085546e-14 + (fConst21 * (8.17295257924616e-17 + (fConst21 * (fConst212 - 3.64831033798957e-20)))))) - 1.7524494396301e-11);
	fConst214 = (6.41471523320994e-23 * fConst21);
	fConst215 = (3.16419233194973e-07 + (fConst21 * ((fConst21 * (1.06857112561395e-12 + (fConst21 * (2.3142517311553e-16 + (fConst21 * (fConst214 - 3.14835016164948e-19)))))) - 1.81305484021946e-09)));
	fConst216 = (6.4738804986947e-23 * fConst21);
	fConst217 = ((fConst21 * (1.68119524906306e-09 + (fConst21 * ((fConst21 * ((fConst21 * (3.15795835994352e-19 - fConst216)) - 2.28565746666998e-16)) - 1.06911160387173e-12)))) - 2.85062372247723e-07);
	fConst218 = (1.18330530969519e-24 * fConst21);
	fConst219 = ((fConst21 * ((fConst21 * (4.34151361232669e-18 + (fConst21 * (1.94715570577142e-21 - fConst218)))) - 1.98579784875373e-14)) - 1.18840678590893e-11);
	fConst220 = (3.85860427074518e-26 * fConst21);
	fConst221 = ((fConst21 * ((fConst21 * (1.49027871612336e-18 + (fConst21 * (2.2761477859318e-22 - fConst220)))) - 1.05339896591343e-15)) - 1.16829962642007e-13);
	fConst222 = (4.28733807860576e-26 * fConst21);
	fConst223 = (1.07183451965144e-14 + (fConst21 * (3.1297567973822e-16 + (fConst21 * ((fConst21 * (fConst222 - 2.57669018524206e-22)) - 1.5605910606125e-18)))));
	fConst224 = (4.28733807860576e-24 * fConst21);
	fConst225 = (fConst21 * ((fConst21 * (1.55201638445528e-16 + (fConst21 * (2.58097752332067e-20 - fConst224)))) - 2.35803594323317e-14));
	fConst226 = (4.2444646978197e-24 * fConst21);
	fConst227 = (1.07183451965144e-12 + (fConst21 * (3.10832010698918e-14 + (fConst21 * ((fConst21 * (fConst226 - 2.55954083292764e-20)) - 1.54944398160812e-16)))));
	fConst228 = (3.42987046288461e-24 * fConst21);
	fConst229 = (1.07183451965144e-11 + (fConst21 * (1.00538077943305e-13 + (fConst21 * ((fConst21 * (fConst228 - 2.45149991334677e-20)) - 1.63690567841168e-16)))));
	fConst230 = (3.39128442017716e-24 * fConst21);
	fConst231 = ((fConst21 * ((fConst21 * (1.63459051584923e-16 + (fConst21 * (2.43220689199305e-20 - fConst230)))) - 1.07290635417109e-13)) - 1.16829962642007e-11);
	fConst232 = (1.28294304664199e-22 * fConst21);
	fConst233 = (6.32838466389946e-07 + (fConst21 * ((fConst21 * ((fConst21 * (4.62850346231061e-16 + (fConst21 * (2.09890010776632e-19 - fConst232)))) - 2.1371422512279e-12)) - 1.20870322681297e-09)));
	fConst234 = (1.29477609973894e-22 * fConst21);
	fConst235 = ((fConst21 * (1.12079683270871e-09 + (fConst21 * (2.13822320774346e-12 + (fConst21 * ((fConst21 * (fConst234 - 2.10530557329568e-19)) - 4.57131493333996e-16)))))) - 5.70124744495447e-07);
	fConst236 = (1.18840678590893e-11 + (fConst21 * ((fConst21 * ((fConst21 * (1.94715570577142e-21 + fConst218)) - 4.34151361232669e-18)) - 1.98579784875373e-14)));
	fConst237 = (1.16829962642007e-13 + (fConst21 * ((fConst21 * ((fConst21 * (2.2761477859318e-22 + fConst220)) - 1.49027871612336e-18)) - 1.05339896591343e-15)));
	fConst238 = ((fConst21 * (3.1297567973822e-16 + (fConst21 * (1.5605910606125e-18 + (fConst21 * (0 - (2.57669018524206e-22 + fConst222))))))) - 1.07183451965144e-14);
	fConst239 = (fConst21 * ((fConst21 * ((fConst21 * (2.58097752332067e-20 + fConst224)) - 1.55201638445528e-16)) - 2.35803594323317e-14));
	fConst240 = ((fConst21 * (3.10832010698918e-14 + (fConst21 * (1.54944398160812e-16 + (fConst21 * (0 - (2.55954083292764e-20 + fConst226))))))) - 1.07183451965144e-12);
	fConst241 = ((fConst21 * (1.00538077943305e-13 + (fConst21 * (1.63690567841168e-16 + (fConst21 * (0 - (2.45149991334677e-20 + fConst228))))))) - 1.07183451965144e-11);
	fConst242 = (1.16829962642007e-11 + (fConst21 * ((fConst21 * ((fConst21 * (2.43220689199305e-20 + fConst230)) - 1.63459051584923e-16)) - 1.07290635417109e-13)));
	fConst243 = (6.32838466389946e-07 + (fConst21 * (1.20870322681297e-09 + (fConst21 * ((fConst21 * ((fConst21 * (2.09890010776632e-19 + fConst232)) - 4.62850346231061e-16)) - 2.1371422512279e-12)))));
	fConst244 = ((fConst21 * ((fConst21 * (2.13822320774346e-12 + (fConst21 * (4.57131493333996e-16 + (fConst21 * (0 - (2.10530557329568e-19 + fConst234))))))) - 1.12079683270871e-09)) - 5.70124744495447e-07);
	fConst245 = (1.7826101788634e-11 + (fConst21 * (9.92898924376863e-15 + (fConst21 * ((fConst21 * (0 - (2.92073355865712e-21 + fConst201))) - 2.17075680616335e-18)))));
	fConst246 = (1.7524494396301e-13 + (fConst21 * (5.26699482956717e-16 + (fConst21 * ((fConst21 * (0 - (3.4142216788977e-22 + fConst203))) - 7.45139358061681e-19)))));
	fConst247 = ((fConst21 * ((fConst21 * (7.80295530306248e-19 + (fConst21 * (3.86503527786309e-22 + fConst205)))) - 1.5648783986911e-16)) - 1.60775177947716e-14);
	fConst248 = (fConst21 * (1.17901797161658e-14 + (fConst21 * ((fConst21 * (0 - (3.871466284981e-20 + fConst188))) - 7.76008192227642e-17))));
	fConst249 = ((fConst21 * ((fConst21 * (7.74721990804061e-17 + (fConst21 * (3.83931124939146e-20 + fConst208)))) - 1.55416005349459e-14)) - 1.60775177947716e-12);
	fConst250 = ((fConst21 * ((fConst21 * (8.18452839205839e-17 + (fConst21 * (3.67724987002016e-20 + fConst210)))) - 5.02690389716525e-14)) - 1.60775177947716e-11);
	fConst251 = (1.7524494396301e-11 + (fConst21 * (5.36453177085546e-14 + (fConst21 * ((fConst21 * (0 - (3.64831033798957e-20 + fConst212))) - 8.17295257924616e-17)))));
	fConst252 = (3.16419233194973e-07 + (fConst21 * (1.81305484021946e-09 + (fConst21 * (1.06857112561395e-12 + (fConst21 * ((fConst21 * (0 - (3.14835016164948e-19 + fConst214))) - 2.3142517311553e-16)))))));
	fConst253 = ((fConst21 * ((fConst21 * ((fConst21 * (2.28565746666998e-16 + (fConst21 * (3.15795835994352e-19 + fConst216)))) - 1.06911160387173e-12)) - 1.68119524906306e-09)) - 2.85062372247723e-07);
	fConst254 = (5.3591725982572e-26 * fConst21);
	fConst255 = ((fConst21 * (5.96920607486733e-16 + (fConst21 * (2.75997388810246e-19 + (fConst21 * (fConst254 - 3.23158107674909e-22)))))) - 8.5518711674317e-12);
	fConst256 = (5.3591725982572e-23 * fConst21);
	fConst257 = ((fConst21 * ((fConst21 * (1.6399068150667e-19 - fConst256)) - 1.07183451965144e-17)) - 2.6795862991286e-14);
	fConst258 = (5.30558087227463e-23 * fConst21);
	fConst259 = (2.6795862991286e-14 + (fConst21 * (1.3397931495643e-17 + (fConst21 * (fConst258 - 1.6399068150667e-19)))));
	fConst260 = (5.3591725982572e-25 * fConst21);
	fConst261 = (2.6795862991286e-16 + (fConst21 * (8.0387588973858e-20 + (fConst21 * (fConst260 - 1.62382929727193e-21)))));
	fConst262 = (8.5518711674317e-10 + (fConst21 * ((fConst21 * ((fConst21 * (4.85541037402102e-20 - fConst182)) - 3.92701924008464e-17)) - 1.16704535198218e-13)));
	fConst263 = (1.06647534705318e-23 * fConst21);
	fConst264 = ((fConst21 * (1.16704535198218e-13 + (fConst21 * (3.95381510307592e-17 + (fConst21 * (fConst263 - 4.85541037402102e-20)))))) - 8.5518711674317e-10);
	fConst265 = ((fConst21 * ((fConst21 * (5.51994777620491e-19 + (fConst21 * (2.15438738449939e-22 - fConst186)))) - 1.19384121497347e-15)) - 5.70124744495447e-12);
	fConst266 = (1.07183451965144e-22 * fConst21);
	fConst267 = (5.3591725982572e-14 + (fConst21 * ((fConst21 * (fConst266 - 1.09327121004447e-19)) - 2.14366903930288e-17)));
	fConst268 = (1.06111617445493e-22 * fConst21);
	fConst269 = ((fConst21 * (2.6795862991286e-17 + (fConst21 * (1.09327121004447e-19 - fConst268)))) - 5.3591725982572e-14);
	fConst270 = (1.07183451965144e-24 * fConst21);
	fConst271 = ((fConst21 * (1.60775177947716e-19 + (fConst21 * (1.08255286484795e-21 - fConst270)))) - 5.3591725982572e-16);
	fConst272 = (2.14366903930288e-23 * fConst21);
	fConst273 = (5.70124744495447e-10 + (fConst21 * (2.33409070396436e-13 + (fConst21 * ((fConst21 * (fConst272 - 3.23694024934735e-20)) - 7.85403848016927e-17)))));
	fConst274 = (2.13295069410637e-23 * fConst21);
	fConst275 = ((fConst21 * ((fConst21 * (7.90763020615185e-17 + (fConst21 * (3.23694024934735e-20 - fConst274)))) - 2.33409070396436e-13)) - 5.70124744495447e-10);
	fConst276 = (5.70124744495447e-12 + (fConst21 * ((fConst21 * ((fConst21 * (2.15438738449939e-22 + fConst186)) - 5.51994777620491e-19)) - 1.19384121497347e-15)));
	fConst277 = (5.3591725982572e-14 + (fConst21 * (2.14366903930288e-17 + (fConst21 * (0 - (1.09327121004447e-19 + fConst266))))));
	fConst278 = ((fConst21 * ((fConst21 * (1.09327121004447e-19 + fConst268)) - 2.6795862991286e-17)) - 5.3591725982572e-14);
	fConst279 = ((fConst21 * ((fConst21 * (1.08255286484795e-21 + fConst270)) - 1.60775177947716e-19)) - 5.3591725982572e-16);
	fConst280 = ((fConst21 * (2.33409070396436e-13 + (fConst21 * (7.85403848016927e-17 + (fConst21 * (0 - (3.23694024934735e-20 + fConst272))))))) - 5.70124744495447e-10);
	fConst281 = (5.70124744495447e-10 + (fConst21 * ((fConst21 * ((fConst21 * (3.23694024934735e-20 + fConst274)) - 7.90763020615185e-17)) - 2.33409070396436e-13)));
	fConst282 = (8.5518711674317e-12 + (fConst21 * (5.96920607486733e-16 + (fConst21 * ((fConst21 * (0 - (3.23158107674909e-22 + fConst254))) - 2.75997388810246e-19)))));
	fConst283 = ((fConst21 * (1.07183451965144e-17 + (fConst21 * (1.6399068150667e-19 + fConst256)))) - 2.6795862991286e-14);
	fConst284 = (2.6795862991286e-14 + (fConst21 * ((fConst21 * (0 - (1.6399068150667e-19 + fConst258))) - 1.3397931495643e-17)));
	fConst285 = (2.6795862991286e-16 + (fConst21 * ((fConst21 * (0 - (1.62382929727193e-21 + fConst260))) - 8.0387588973858e-20)));
	fConst286 = ((fConst21 * ((fConst21 * (3.92701924008464e-17 + (fConst21 * (4.85541037402102e-20 + fConst182)))) - 1.16704535198218e-13)) - 8.5518711674317e-10);
	fConst287 = (8.5518711674317e-10 + (fConst21 * (1.16704535198218e-13 + (fConst21 * ((fConst21 * (0 - (4.85541037402102e-20 + fConst263))) - 3.95381510307592e-17)))));
	fConst288 = (2.85062372247723e-12 + (fConst21 * (5.96920607486733e-16 + (fConst21 * (2.75997388810246e-19 + (fConst21 * (1.0771936922497e-22 + fConst180)))))));
	fConst289 = ((fConst21 * ((fConst21 * (0 - (5.46635605022234e-20 + fConst182))) - 1.07183451965144e-17)) - 2.6795862991286e-14);
	fConst290 = (2.6795862991286e-14 + (fConst21 * (1.3397931495643e-17 + (fConst21 * (5.46635605022234e-20 + fConst184)))));
	fConst291 = (2.6795862991286e-16 + (fConst21 * (8.0387588973858e-20 + (fConst21 * (5.41276432423977e-22 + fConst186)))));
	fConst292 = ((fConst21 * ((fConst21 * ((fConst21 * (0 - (1.61847012467367e-20 + fConst188))) - 3.92701924008464e-17)) - 1.16704535198218e-13)) - 2.85062372247723e-10);
	fConst293 = (2.85062372247723e-10 + (fConst21 * (1.16704535198218e-13 + (fConst21 * (3.95381510307592e-17 + (fConst21 * (1.61847012467367e-20 + fConst190)))))));
	fConst294 = (1.1952912389216e-25 * fConst21);
	fConst295 = (1.28697551008889e-12 + (fConst21 * (2.23301151733682e-15 + (fConst21 * (9.77069878100369e-19 + (fConst21 * (9.43587156290722e-22 + fConst294)))))));
	fConst296 = (3.89768882257045e-27 * fConst21);
	fConst297 = (5.90066780083582e-14 + (fConst21 * (5.32034524280866e-16 + (fConst21 * (7.52687019291938e-19 + (fConst21 * (1.14960166439036e-22 + fConst296)))))));
	fConst298 = (4.33076535841161e-27 * fConst21);
	fConst299 = ((fConst21 * ((fConst21 * ((fConst21 * (0 - (1.30139499020269e-22 + fConst298))) - 7.88199295230913e-19)) - 1.58072935582024e-16)) - 5.41345669801451e-15);
	fConst300 = (4.33076535841161e-25 * fConst21);
	fConst301 = (fConst21 * (1.19096047356319e-14 + (fConst21 * (7.83868529872501e-17 + (fConst21 * (1.30356037288189e-20 + fConst300))))));
	fConst302 = (4.28745770482749e-25 * fConst21);
	fConst303 = ((fConst21 * ((fConst21 * ((fConst21 * (0 - (1.29273345948587e-20 + fConst302))) - 7.82569300264978e-17)) - 1.56990244242421e-14)) - 5.41345669801451e-13);
	fConst304 = (3.46461228672929e-25 * fConst21);
	fConst305 = ((fConst21 * ((fConst21 * ((fConst21 * (0 - (1.23816581596988e-20 + fConst304))) - 8.26743106920776e-17)) - 5.07782238273761e-14)) - 5.41345669801451e-12);
	fConst306 = (3.42563539850358e-25 * fConst21);
	fConst307 = (5.90066780083582e-12 + (fConst21 * (5.41887015471253e-14 + (fConst21 * (8.25573800274005e-17 + (fConst21 * (1.22842159391345e-20 + fConst306)))))));
	fConst308 = (1.29593822585109e-23 * fConst21);
	fConst309 = (1.36566748518093e-08 + (fConst21 * (1.30887540309449e-10 + (fConst21 * (2.39707862588083e-13 + (fConst21 * (1.02130077211771e-16 + (fConst21 * (1.01700347176434e-19 + fConst308)))))))));
	fConst310 = (1.30789113824031e-23 * fConst21);
	fConst311 = ((fConst21 * ((fConst21 * ((fConst21 * ((fConst21 * (0 - (1.0198401230741e-19 + fConst310))) - 9.82453806852758e-17)) - 2.39058247784321e-13)) - 1.21359856520944e-10)) - 1.23033106773057e-08);
	fConst312 = (1.0826913396029e-26 * fConst21);
	fConst313 = ((fConst21 * (1.5010039026313e-16 + (fConst21 * ((fConst21 * (1.08810479630092e-22 - fConst312)) - 2.78793019947747e-19)))) - 6.15165533865286e-13);
	fConst314 = (1.0826913396029e-23 * fConst21);
	fConst315 = ((fConst21 * (1.0826913396029e-17 + (fConst21 * (fConst314 - 5.5217258319748e-20)))) - 2.70672834900726e-14);
	fConst316 = (1.07186442620687e-23 * fConst21);
	fConst317 = (2.70672834900726e-14 + (fConst21 * ((fConst21 * (5.5217258319748e-20 - fConst316)) - 1.35336417450363e-17)));
	fConst318 = (1.0826913396029e-25 * fConst21);
	fConst319 = (2.70672834900726e-16 + (fConst21 * ((fConst21 * (5.46759126499466e-22 - fConst318)) - 8.12018504702177e-20)));
	fConst320 = (2.16538267920581e-24 * fConst21);
	fConst321 = (6.15165533865286e-11 + (fConst21 * ((fConst21 * (3.06106369651366e-17 + (fConst21 * (fConst320 - 1.63486392280038e-20)))) - 2.73133497036187e-14)));
	fConst322 = (2.15455576580978e-24 * fConst21);
	fConst323 = ((fConst21 * (2.73133497036187e-14 + (fConst21 * ((fConst21 * (1.63486392280038e-20 - fConst322)) - 3.08813098000373e-17)))) - 6.15165533865286e-11);
	fConst324 = ((fConst21 * (2.23301151733682e-15 + (fConst21 * ((fConst21 * (9.43587156290722e-22 - fConst294)) - 9.77069878100369e-19)))) - 1.28697551008889e-12);
	fConst325 = ((fConst21 * (5.32034524280866e-16 + (fConst21 * ((fConst21 * (1.14960166439036e-22 - fConst296)) - 7.52687019291938e-19)))) - 5.90066780083582e-14);
	fConst326 = (5.41345669801451e-15 + (fConst21 * ((fConst21 * (7.88199295230913e-19 + (fConst21 * (fConst298 - 1.30139499020269e-22)))) - 1.58072935582024e-16)));
	fConst327 = (fConst21 * (1.19096047356319e-14 + (fConst21 * ((fConst21 * (1.30356037288189e-20 - fConst300)) - 7.83868529872501e-17))));
	fConst328 = (5.41345669801451e-13 + (fConst21 * ((fConst21 * (7.82569300264978e-17 + (fConst21 * (fConst302 - 1.29273345948587e-20)))) - 1.56990244242421e-14)));
	fConst329 = (5.41345669801451e-12 + (fConst21 * ((fConst21 * (8.26743106920776e-17 + (fConst21 * (fConst304 - 1.23816581596988e-20)))) - 5.07782238273761e-14)));
	fConst330 = ((fConst21 * (5.41887015471253e-14 + (fConst21 * ((fConst21 * (1.22842159391345e-20 - fConst306)) - 8.25573800274005e-17)))) - 5.90066780083582e-12);
	fConst331 = (1.36566748518093e-08 + (fConst21 * ((fConst21 * (2.39707862588083e-13 + (fConst21 * ((fConst21 * (1.01700347176434e-19 - fConst308)) - 1.02130077211771e-16)))) - 1.30887540309449e-10)));
	fConst332 = ((fConst21 * (1.21359856520944e-10 + (fConst21 * ((fConst21 * (9.82453806852758e-17 + (fConst21 * (fConst310 - 1.0198401230741e-19)))) - 2.39058247784321e-13)))) - 1.23033106773057e-08);
	fConst333 = (5.97645619460802e-25 * fConst21);
	fConst334 = ((fConst21 * (2.23301151733682e-15 + (fConst21 * (9.77069878100369e-19 + (fConst21 * (fConst333 - 2.83076146887217e-21)))))) - 3.86092653026666e-12);
	fConst335 = (1.94884441128522e-26 * fConst21);
	fConst336 = ((fConst21 * (5.32034524280866e-16 + (fConst21 * (7.52687019291938e-19 + (fConst21 * (fConst335 - 3.44880499317109e-22)))))) - 1.77020034025075e-13);
	fConst337 = (2.16538267920581e-26 * fConst21);
	fConst338 = (1.62403700940435e-14 + (fConst21 * ((fConst21 * ((fConst21 * (3.90418497060807e-22 - fConst337)) - 7.88199295230913e-19)) - 1.58072935582024e-16)));
	fConst339 = (fConst21 * (1.19096047356319e-14 + (fConst21 * (7.83868529872501e-17 + (fConst21 * (fConst320 - 3.91068111864568e-20))))));
	fConst340 = (2.14372885241375e-24 * fConst21);
	fConst341 = (1.62403700940435e-12 + (fConst21 * ((fConst21 * ((fConst21 * (3.8782003784576e-20 - fConst340)) - 7.82569300264978e-17)) - 1.56990244242421e-14)));
	fConst342 = (1.73230614336464e-24 * fConst21);
	fConst343 = (1.62403700940435e-11 + (fConst21 * ((fConst21 * ((fConst21 * (3.71449744790964e-20 - fConst342)) - 8.26743106920776e-17)) - 5.07782238273761e-14)));
	fConst344 = (1.71281769925179e-24 * fConst21);
	fConst345 = ((fConst21 * (5.41887015471253e-14 + (fConst21 * (8.25573800274005e-17 + (fConst21 * (fConst344 - 3.68526478174036e-20)))))) - 1.77020034025075e-11);
	fConst346 = (6.47969112925545e-23 * fConst21);
	fConst347 = (6.82833742590467e-08 + (fConst21 * ((fConst21 * (2.39707862588083e-13 + (fConst21 * (1.02130077211771e-16 + (fConst21 * (fConst346 - 3.05101041529302e-19)))))) - 3.92662620928347e-10)));
	fConst348 = (6.53945569120153e-23 * fConst21);
	fConst349 = ((fConst21 * (3.64079569562831e-10 + (fConst21 * ((fConst21 * ((fConst21 * (3.0595203692223e-19 - fConst348)) - 9.82453806852758e-17)) - 2.39058247784321e-13)))) - 6.15165533865286e-08);
	fConst350 = (1.1952912389216e-24 * fConst21);
	fConst351 = ((fConst21 * ((fConst21 * (1.95413975620074e-18 + (fConst21 * (1.88717431258144e-21 - fConst350)))) - 4.46602303467364e-15)) - 2.57395102017777e-12);
	fConst352 = (3.89768882257045e-26 * fConst21);
	fConst353 = ((fConst21 * ((fConst21 * (1.50537403858388e-18 + (fConst21 * (2.29920332878072e-22 - fConst352)))) - 1.06406904856173e-15)) - 1.18013356016716e-13);
	fConst354 = (4.33076535841161e-26 * fConst21);
	fConst355 = (1.0826913396029e-14 + (fConst21 * (3.16145871164048e-16 + (fConst21 * ((fConst21 * (fConst354 - 2.60278998040538e-22)) - 1.57639859046183e-18)))));
	fConst356 = (4.33076535841161e-24 * fConst21);
	fConst357 = (fConst21 * ((fConst21 * (1.567737059745e-16 + (fConst21 * (2.60712074576379e-20 - fConst356)))) - 2.38192094712639e-14));
	fConst358 = (4.28745770482749e-24 * fConst21);
	fConst359 = (1.0826913396029e-12 + (fConst21 * (3.13980488484842e-14 + (fConst21 * ((fConst21 * (fConst358 - 2.58546691897173e-20)) - 1.56513860052996e-16)))));
	fConst360 = (3.46461228672929e-24 * fConst21);
	fConst361 = (1.0826913396029e-11 + (fConst21 * (1.01556447654752e-13 + (fConst21 * ((fConst21 * (fConst360 - 2.47633163193976e-20)) - 1.65348621384155e-16)))));
	fConst362 = (3.42563539850358e-24 * fConst21);
	fConst363 = ((fConst21 * ((fConst21 * (1.65114760054801e-16 + (fConst21 * (2.45684318782691e-20 - fConst362)))) - 1.08377403094251e-13)) - 1.18013356016716e-11);
	fConst364 = (1.29593822585109e-22 * fConst21);
	fConst365 = (1.36566748518093e-07 + (fConst21 * ((fConst21 * ((fConst21 * (2.04260154423542e-16 + (fConst21 * (2.03400694352868e-19 - fConst364)))) - 4.79415725176165e-13)) - 2.61775080618898e-10)));
	fConst366 = (1.30789113824031e-22 * fConst21);
	fConst367 = ((fConst21 * (2.42719713041887e-10 + (fConst21 * (4.78116495568642e-13 + (fConst21 * ((fConst21 * (fConst366 - 2.0396802461482e-19)) - 1.96490761370552e-16)))))) - 1.23033106773057e-07);
	fConst368 = (2.57395102017777e-12 + (fConst21 * ((fConst21 * ((fConst21 * (1.88717431258144e-21 + fConst350)) - 1.95413975620074e-18)) - 4.46602303467364e-15)));
	fConst369 = (1.18013356016716e-13 + (fConst21 * ((fConst21 * ((fConst21 * (2.29920332878072e-22 + fConst352)) - 1.50537403858388e-18)) - 1.06406904856173e-15)));
	fConst370 = ((fConst21 * (3.16145871164048e-16 + (fConst21 * (1.57639859046183e-18 + (fConst21 * (0 - (2.60278998040538e-22 + fConst354))))))) - 1.0826913396029e-14);
	fConst371 = (fConst21 * ((fConst21 * ((fConst21 * (2.60712074576379e-20 + fConst356)) - 1.567737059745e-16)) - 2.38192094712639e-14));
	fConst372 = ((fConst21 * (3.13980488484842e-14 + (fConst21 * (1.56513860052996e-16 + (fConst21 * (0 - (2.58546691897173e-20 + fConst358))))))) - 1.0826913396029e-12);
	fConst373 = ((fConst21 * (1.01556447654752e-13 + (fConst21 * (1.65348621384155e-16 + (fConst21 * (0 - (2.47633163193976e-20 + fConst360))))))) - 1.0826913396029e-11);
	fConst374 = (1.18013356016716e-11 + (fConst21 * ((fConst21 * ((fConst21 * (2.45684318782691e-20 + fConst362)) - 1.65114760054801e-16)) - 1.08377403094251e-13)));
	fConst375 = (1.36566748518093e-07 + (fConst21 * (2.61775080618898e-10 + (fConst21 * ((fConst21 * ((fConst21 * (2.03400694352868e-19 + fConst364)) - 2.04260154423542e-16)) - 4.79415725176165e-13)))));
	fConst376 = ((fConst21 * ((fConst21 * (4.78116495568642e-13 + (fConst21 * (1.96490761370552e-16 + (fConst21 * (0 - (2.0396802461482e-19 + fConst366))))))) - 2.42719713041887e-10)) - 1.23033106773057e-07);
	fConst377 = (3.86092653026666e-12 + (fConst21 * (2.23301151733682e-15 + (fConst21 * ((fConst21 * (0 - (2.83076146887217e-21 + fConst333))) - 9.77069878100369e-19)))));
	fConst378 = (1.77020034025075e-13 + (fConst21 * (5.32034524280866e-16 + (fConst21 * ((fConst21 * (0 - (3.44880499317109e-22 + fConst335))) - 7.52687019291938e-19)))));
	fConst379 = ((fConst21 * ((fConst21 * (7.88199295230913e-19 + (fConst21 * (3.90418497060807e-22 + fConst337)))) - 1.58072935582024e-16)) - 1.62403700940435e-14);
	fConst380 = (fConst21 * (1.19096047356319e-14 + (fConst21 * ((fConst21 * (0 - (3.91068111864568e-20 + fConst320))) - 7.83868529872501e-17))));
	fConst381 = ((fConst21 * ((fConst21 * (7.82569300264978e-17 + (fConst21 * (3.8782003784576e-20 + fConst340)))) - 1.56990244242421e-14)) - 1.62403700940435e-12);
	fConst382 = ((fConst21 * ((fConst21 * (8.26743106920776e-17 + (fConst21 * (3.71449744790964e-20 + fConst342)))) - 5.07782238273761e-14)) - 1.62403700940435e-11);
	fConst383 = (1.77020034025075e-11 + (fConst21 * (5.41887015471253e-14 + (fConst21 * ((fConst21 * (0 - (3.68526478174036e-20 + fConst344))) - 8.25573800274005e-17)))));
	fConst384 = (6.82833742590467e-08 + (fConst21 * (3.92662620928347e-10 + (fConst21 * (2.39707862588083e-13 + (fConst21 * ((fConst21 * (0 - (3.05101041529302e-19 + fConst346))) - 1.02130077211771e-16)))))));
	fConst385 = ((fConst21 * ((fConst21 * ((fConst21 * (9.82453806852758e-17 + (fConst21 * (3.0595203692223e-19 + fConst348)))) - 2.39058247784321e-13)) - 3.64079569562831e-10)) - 6.15165533865286e-08);
	fConst386 = (5.41345669801451e-26 * fConst21);
	fConst387 = ((fConst21 * (1.5010039026313e-16 + (fConst21 * (2.78793019947747e-19 + (fConst21 * (fConst386 - 3.26431438890275e-22)))))) - 1.84549660159586e-12);
	fConst388 = (5.41345669801451e-23 * fConst21);
	fConst389 = ((fConst21 * ((fConst21 * (1.65651774959244e-19 - fConst388)) - 1.0826913396029e-17)) - 2.70672834900726e-14);
	fConst390 = (5.35932213103437e-23 * fConst21);
	fConst391 = (2.70672834900726e-14 + (fConst21 * (1.35336417450363e-17 + (fConst21 * (fConst390 - 1.65651774959244e-19)))));
	fConst392 = (5.41345669801451e-25 * fConst21);
	fConst393 = (2.70672834900726e-16 + (fConst21 * (8.12018504702177e-20 + (fConst21 * (fConst392 - 1.6402773794984e-21)))));
	fConst394 = (1.84549660159586e-10 + (fConst21 * ((fConst21 * ((fConst21 * (4.90459176840115e-20 - fConst314)) - 3.06106369651366e-17)) - 2.73133497036187e-14)));
	fConst395 = (1.07727788290489e-23 * fConst21);
	fConst396 = ((fConst21 * (2.73133497036187e-14 + (fConst21 * (3.08813098000373e-17 + (fConst21 * (fConst395 - 4.90459176840115e-20)))))) - 1.84549660159586e-10);
	fConst397 = ((fConst21 * ((fConst21 * (5.57586039895495e-19 + (fConst21 * (2.17620959260183e-22 - fConst318)))) - 3.00200780526259e-16)) - 1.23033106773057e-12);
	fConst398 = (1.0826913396029e-22 * fConst21);
	fConst399 = (5.41345669801451e-14 + (fConst21 * ((fConst21 * (fConst398 - 1.10434516639496e-19)) - 2.16538267920581e-17)));
	fConst400 = (1.07186442620687e-22 * fConst21);
	fConst401 = ((fConst21 * (2.70672834900726e-17 + (fConst21 * (1.10434516639496e-19 - fConst400)))) - 5.41345669801451e-14);
	fConst402 = (1.0826913396029e-24 * fConst21);
	fConst403 = ((fConst21 * (1.62403700940435e-19 + (fConst21 * (1.09351825299893e-21 - fConst402)))) - 5.41345669801451e-16);
	fConst404 = (2.16538267920581e-23 * fConst21);
	fConst405 = (1.23033106773057e-10 + (fConst21 * (5.46266994072374e-14 + (fConst21 * ((fConst21 * (fConst404 - 3.26972784560077e-20)) - 6.12212739302732e-17)))));
	fConst406 = (2.15455576580978e-23 * fConst21);
	fConst407 = ((fConst21 * ((fConst21 * (6.17626196000747e-17 + (fConst21 * (3.26972784560077e-20 - fConst406)))) - 5.46266994072374e-14)) - 1.23033106773057e-10);
	fConst408 = (1.23033106773057e-12 + (fConst21 * ((fConst21 * ((fConst21 * (2.17620959260183e-22 + fConst318)) - 5.57586039895495e-19)) - 3.00200780526259e-16)));
	fConst409 = (5.41345669801451e-14 + (fConst21 * (2.16538267920581e-17 + (fConst21 * (0 - (1.10434516639496e-19 + fConst398))))));
	fConst410 = ((fConst21 * ((fConst21 * (1.10434516639496e-19 + fConst400)) - 2.70672834900726e-17)) - 5.41345669801451e-14);
	fConst411 = ((fConst21 * ((fConst21 * (1.09351825299893e-21 + fConst402)) - 1.62403700940435e-19)) - 5.41345669801451e-16);
	fConst412 = ((fConst21 * (5.46266994072374e-14 + (fConst21 * (6.12212739302732e-17 + (fConst21 * (0 - (3.26972784560077e-20 + fConst404))))))) - 1.23033106773057e-10);
	fConst413 = (1.23033106773057e-10 + (fConst21 * ((fConst21 * ((fConst21 * (3.26972784560077e-20 + fConst406)) - 6.17626196000747e-17)) - 5.46266994072374e-14)));
	fConst414 = (1.84549660159586e-12 + (fConst21 * (1.5010039026313e-16 + (fConst21 * ((fConst21 * (0 - (3.26431438890275e-22 + fConst386))) - 2.78793019947747e-19)))));
	fConst415 = ((fConst21 * (1.0826913396029e-17 + (fConst21 * (1.65651774959244e-19 + fConst388)))) - 2.70672834900726e-14);
	fConst416 = (2.70672834900726e-14 + (fConst21 * ((fConst21 * (0 - (1.65651774959244e-19 + fConst390))) - 1.35336417450363e-17)));
	fConst417 = (2.70672834900726e-16 + (fConst21 * ((fConst21 * (0 - (1.6402773794984e-21 + fConst392))) - 8.12018504702177e-20)));
	fConst418 = ((fConst21 * ((fConst21 * (3.06106369651366e-17 + (fConst21 * (4.90459176840115e-20 + fConst314)))) - 2.73133497036187e-14)) - 1.84549660159586e-10);
	fConst419 = (1.84549660159586e-10 + (fConst21 * (2.73133497036187e-14 + (fConst21 * ((fConst21 * (0 - (4.90459176840115e-20 + fConst395))) - 3.08813098000373e-17)))));
	fConst420 = (6.15165533865286e-13 + (fConst21 * (1.5010039026313e-16 + (fConst21 * (2.78793019947747e-19 + (fConst21 * (1.08810479630092e-22 + fConst312)))))));
	fConst421 = ((fConst21 * ((fConst21 * (0 - (5.5217258319748e-20 + fConst314))) - 1.0826913396029e-17)) - 2.70672834900726e-14);
	fConst422 = (2.70672834900726e-14 + (fConst21 * (1.35336417450363e-17 + (fConst21 * (5.5217258319748e-20 + fConst316)))));
	fConst423 = (2.70672834900726e-16 + (fConst21 * (8.12018504702177e-20 + (fConst21 * (5.46759126499466e-22 + fConst318)))));
	fConst424 = ((fConst21 * ((fConst21 * ((fConst21 * (0 - (1.63486392280038e-20 + fConst320))) - 3.06106369651366e-17)) - 2.73133497036187e-14)) - 6.15165533865286e-11);
	fConst425 = (6.15165533865286e-11 + (fConst21 * (2.73133497036187e-14 + (fConst21 * (3.08813098000373e-17 + (fConst21 * (1.63486392280038e-20 + fConst322)))))));
	fConst426 = (4.88635190300831e-21 * fConst21);
	fConst427 = (4.55975416123025e-10 + (fConst21 * (7.27464491647143e-13 + (fConst21 * (7.23003039909614e-17 + fConst426)))));
	fConst428 = (1.59337562054619e-22 * fConst21);
	fConst429 = (4.82438729554263e-13 + (fConst21 * (2.48301034201781e-15 + (fConst21 * (5.49626068220627e-18 + fConst428)))));
	fConst430 = (1.77041735616243e-22 * fConst21);
	fConst431 = ((fConst21 * ((fConst21 * (0 - (6.20531283334932e-18 + fConst430))) - 1.28355258321776e-15)) - 4.42604339040608e-14);
	fConst432 = (1.77041735616243e-20 * fConst21);
	fConst433 = (fConst21 * (9.73729545889338e-14 + (fConst21 * (6.21416492013014e-16 + fConst432))));
	fConst434 = (1.75271318260081e-20 * fConst21);
	fConst435 = ((fConst21 * ((fConst21 * (0 - (6.16105239944526e-16 + fConst434))) - 1.27470049643695e-13)) - 4.42604339040608e-12);
	fConst436 = (1.41633388492995e-20 * fConst21);
	fConst437 = ((fConst21 * ((fConst21 * (0 - (5.76979016373337e-16 + fConst436))) - 2.29269047623035e-13)) - 4.42604339040608e-11);
	fConst438 = (1.40040012872448e-20 * fConst21);
	fConst439 = (4.82438729554263e-11 + (fConst21 * (2.5635643317232e-13 + (fConst21 * (5.72198889511698e-16 + fConst438)))));
	fConst440 = (5.29779689658046e-19 * fConst21);
	fConst441 = (4.91290816335075e-06 + (fConst21 * (4.63853773357948e-08 + (fConst21 * (7.85356253984977e-11 + (fConst21 * (7.81108137538865e-15 + fConst440)))))));
	fConst442 = (5.34666041561055e-19 * fConst21);
	fConst443 = ((fConst21 * ((fConst21 * ((fConst21 * (0 - (7.85640405970641e-15 + fConst442))) - 7.88782896777829e-11)) - 4.30255677981375e-08)) - 4.42604339040608e-06);
	fConst444 = (4.42604339040608e-22 * fConst21);
	fConst445 = ((fConst21 * (2.2572821291071e-14 + (fConst21 * (fConst444 - 6.66119530256115e-18)))) - 2.21302169520304e-10);
	fConst446 = (4.42604339040608e-19 * fConst21);
	fConst447 = ((fConst21 * (4.47030382431014e-15 - fConst446)) - 2.21302169520304e-13);
	fConst448 = (4.38178295650202e-19 * fConst21);
	fConst449 = (4.42604339040608e-13 + (fConst21 * (fConst448 - 4.44817360735811e-15)));
	fConst450 = (4.42604339040608e-21 * fConst21);
	fConst451 = (4.42604339040608e-15 + (fConst21 * (fConst450 - 4.44817360735811e-17)));
	fConst452 = (8.85208678081216e-20 * fConst21);
	fConst453 = (2.21302169520304e-08 + (fConst21 * ((fConst21 * (1.11093689099193e-15 - fConst452)) - 6.66119530256115e-12)));
	fConst454 = (8.8078263469081e-20 * fConst21);
	fConst455 = ((fConst21 * (6.68332551951318e-12 + (fConst21 * (fConst454 - 1.10872386929672e-15)))) - 2.21302169520304e-08);
	fConst456 = ((fConst21 * (7.27464491647143e-13 + (fConst21 * (fConst426 - 7.23003039909614e-17)))) - 4.55975416123025e-10);
	fConst457 = ((fConst21 * (2.48301034201781e-15 + (fConst21 * (fConst428 - 5.49626068220627e-18)))) - 4.82438729554263e-13);
	fConst458 = (4.42604339040608e-14 + (fConst21 * ((fConst21 * (6.20531283334932e-18 - fConst430)) - 1.28355258321776e-15)));
	fConst459 = (fConst21 * (9.73729545889338e-14 + (fConst21 * (fConst432 - 6.21416492013014e-16))));
	fConst460 = (4.42604339040608e-12 + (fConst21 * ((fConst21 * (6.16105239944526e-16 - fConst434)) - 1.27470049643695e-13)));
	fConst461 = (4.42604339040608e-11 + (fConst21 * ((fConst21 * (5.76979016373337e-16 - fConst436)) - 2.29269047623035e-13)));
	fConst462 = ((fConst21 * (2.5635643317232e-13 + (fConst21 * (fConst438 - 5.72198889511698e-16)))) - 4.82438729554263e-11);
	fConst463 = (4.91290816335075e-06 + (fConst21 * ((fConst21 * (7.85356253984977e-11 + (fConst21 * (fConst440 - 7.81108137538865e-15)))) - 4.63853773357948e-08)));
	fConst464 = ((fConst21 * (4.30255677981375e-08 + (fConst21 * ((fConst21 * (7.85640405970641e-15 - fConst442)) - 7.88782896777829e-11)))) - 4.42604339040608e-06);
	fConst465 = (1.95454076120333e-20 * fConst21);
	fConst466 = faustpower<2>(fConst21);
	fConst467 = ((fConst466 * (1.44600607981923e-16 - fConst465)) - 9.1195083224605e-10);
	fConst468 = (6.37350248218476e-22 * fConst21);
	fConst469 = ((fConst466 * (1.09925213644125e-17 - fConst468)) - 9.64877459108526e-13);
	fConst470 = (7.08166942464973e-22 * fConst21);
	fConst471 = (8.85208678081216e-14 + (fConst466 * (fConst470 - 1.24106256666986e-17)));
	fConst472 = (7.08166942464973e-20 * fConst21);
	fConst473 = (fConst466 * (1.24283298402603e-15 - fConst472));
	fConst474 = (7.01085273040323e-20 * fConst21);
	fConst475 = (8.85208678081216e-12 + (fConst466 * (fConst474 - 1.23221047988905e-15)));
	fConst476 = (5.66533553971978e-20 * fConst21);
	fConst477 = (8.85208678081216e-11 + (fConst466 * (fConst476 - 1.15395803274667e-15)));
	fConst478 = (5.60160051489793e-20 * fConst21);
	fConst479 = ((fConst466 * (1.1443977790234e-15 - fConst478)) - 9.64877459108525e-11);
	fConst480 = (2.11911875863218e-18 * fConst21);
	fConst481 = (1.9651632653403e-05 + (fConst21 * ((fConst466 * (1.56221627507773e-14 - fConst480)) - 9.27707546715895e-08)));
	fConst482 = (2.13866416624422e-18 * fConst21);
	fConst483 = ((fConst21 * (8.6051135596275e-08 + (fConst466 * (fConst482 - 1.57128081194128e-14)))) - 1.77041735616243e-05);
	fConst484 = (2.56710516643553e-15 - (1.06225041369746e-21 * fConst466));
	fConst485 = ((1.06225041369746e-19 * fConst466) - 1.94745909177868e-13);
	fConst486 = (2.5494009928739e-13 - (1.05162790956048e-19 * fConst466));
	fConst487 = (4.5853809524607e-13 - (8.49800330957967e-20 * fConst466));
	fConst488 = ((8.4024007723469e-20 * fConst466) - 5.1271286634464e-13);
	fConst489 = ((9.56025372327713e-22 * fConst466) - 4.96602068403562e-15);
	fConst490 = ((2.93181114180499e-20 * fConst466) - 1.45492898329429e-12);
	fConst491 = (2.94774489801045e-05 + (fConst466 * ((3.17867813794828e-18 * fConst466) - 1.57071250796995e-10)));
	fConst492 = ((fConst466 * (1.57756579355566e-10 - (3.20799624936633e-18 * fConst466))) - 2.65562603424365e-05);
	fConst493 = (9.1195083224605e-10 + (fConst466 * (0 - (1.44600607981923e-16 + fConst465))));
	fConst494 = (9.64877459108526e-13 + (fConst466 * (0 - (1.09925213644125e-17 + fConst468))));
	fConst495 = ((fConst466 * (1.24106256666986e-17 + fConst470)) - 8.85208678081216e-14);
	fConst496 = (fConst466 * (0 - (1.24283298402603e-15 + fConst472)));
	fConst497 = ((fConst466 * (1.23221047988905e-15 + fConst474)) - 8.85208678081216e-12);
	fConst498 = ((fConst466 * (1.15395803274667e-15 + fConst476)) - 8.85208678081216e-11);
	fConst499 = (9.64877459108525e-11 + (fConst466 * (0 - (1.1443977790234e-15 + fConst478))));
	fConst500 = (1.9651632653403e-05 + (fConst21 * (9.27707546715895e-08 + (fConst466 * (0 - (1.56221627507773e-14 + fConst480))))));
	fConst501 = ((fConst21 * ((fConst466 * (1.57128081194128e-14 + fConst482)) - 8.6051135596275e-08)) - 1.77041735616243e-05);
	fConst502 = (1.77041735616243e-21 * fConst21);
	fConst503 = ((fConst466 * (1.33223906051223e-17 - fConst502)) - 4.42604339040608e-10);
	fConst504 = (1.77041735616243e-18 * fConst21);
	fConst505 = (fConst504 - 8.94060764862028e-15);
	fConst506 = (1.75271318260081e-18 * fConst21);
	fConst507 = (8.89634721471622e-15 - fConst506);
	fConst508 = (8.89634721471622e-17 - fConst432);
	fConst509 = (3.54083471232486e-19 * fConst21);
	fConst510 = (4.42604339040608e-08 + (fConst466 * (fConst509 - 2.22187378198385e-15)));
	fConst511 = (3.52313053876324e-19 * fConst21);
	fConst512 = ((fConst466 * (2.21744773859345e-15 - fConst511)) - 4.42604339040608e-08);
	fConst513 = (4.42604339040608e-13 - (2.65562603424365e-18 * fConst466));
	fConst514 = ((2.62906977390121e-18 * fConst466) - 8.85208678081216e-13);
	fConst515 = ((2.65562603424365e-20 * fConst466) - 8.85208678081216e-15);
	fConst516 = (1.33223906051223e-11 - (5.3112520684873e-19 * fConst466));
	fConst517 = ((5.28469580814486e-19 * fConst466) - 1.33666510390264e-11);
	fConst518 = ((2.65562603424365e-21 * fConst466) - 4.5145642582142e-14);
	fConst519 = (4.42604339040608e-10 + (fConst466 * (0 - (1.33223906051223e-17 + fConst502))));
	fConst520 = (8.94060764862028e-15 + fConst504);
	fConst521 = (0 - (8.89634721471622e-15 + fConst506));
	fConst522 = (0 - (8.89634721471622e-17 + fConst432));
	fConst523 = ((fConst466 * (2.22187378198385e-15 + fConst509)) - 4.42604339040608e-08);
	fConst524 = (4.42604339040608e-08 + (fConst466 * (0 - (2.21744773859345e-15 + fConst511))));
	fConst525 = (2.21302169520304e-10 + (fConst21 * (2.2572821291071e-14 + (fConst21 * (6.66119530256115e-18 + fConst444)))));
	fConst526 = ((fConst21 * (0 - (4.47030382431014e-15 + fConst446))) - 2.21302169520304e-13);
	fConst527 = (4.42604339040608e-13 + (fConst21 * (4.44817360735811e-15 + fConst448)));
	fConst528 = (4.42604339040608e-15 + (fConst21 * (4.44817360735811e-17 + fConst450)));
	fConst529 = ((fConst21 * ((fConst21 * (0 - (1.11093689099193e-15 + fConst452))) - 6.66119530256115e-12)) - 2.21302169520304e-08);
	fConst530 = (2.21302169520304e-08 + (fConst21 * (6.68332551951318e-12 + (fConst21 * (1.10872386929672e-15 + fConst454)))));
	fConst531 = (5.09659284443651e-21 * fConst21);
	fConst532 = (2.90429276448603e-10 + (fConst21 * (4.74893268461376e-13 + (fConst21 * (6.74157594007769e-17 + fConst531)))));
	fConst533 = (1.66193244927277e-22 * fConst21);
	fConst534 = (5.0319621380759e-13 + (fConst21 * (2.58984473345007e-15 + (fConst21 * (5.73274365418592e-18 + fConst533)))));
	fConst535 = (1.84659161030308e-22 * fConst21);
	fConst536 = ((fConst21 * ((fConst21 * (0 - (6.47230359411231e-18 + fConst535))) - 1.33877891746973e-15)) - 4.61647902575771e-14);
	fConst537 = (1.84659161030308e-20 * fConst21);
	fConst538 = (fConst21 * (1.0156253856667e-13 + (fConst21 * (6.48153655216382e-16 + fConst537))));
	fConst539 = (1.82812569420005e-20 * fConst21);
	fConst540 = ((fConst21 * ((fConst21 * (0 - (6.42613880385473e-16 + fConst539))) - 1.32954595941822e-13)) - 4.61647902575771e-12);
	fConst541 = (1.47727328824247e-20 * fConst21);
	fConst542 = ((fConst21 * ((fConst21 * (0 - (6.01804205797775e-16 + fConst541))) - 2.39133613534249e-13)) - 4.61647902575771e-11);
	fConst543 = (1.46065396374974e-20 * fConst21);
	fConst544 = (5.0319621380759e-11 + (fConst21 * (2.67386465171886e-13 + (fConst21 * (5.96818408449956e-16 + fConst543)))));
	fConst545 = (5.52574073467095e-19 * fConst21);
	fConst546 = (3.10728327616692e-06 + (fConst21 * (2.95412127107681e-08 + (fConst21 * (5.11834981897011e-11 + (fConst21 * (7.28293766644376e-15 + fConst545)))))));
	fConst547 = (5.57670666311531e-19 * fConst21);
	fConst548 = ((fConst21 * ((fConst21 * ((fConst21 * (0 - (7.32221506288674e-15 + fConst547))) - 5.13010455324519e-11)) - 2.73960527750481e-08)) - 2.79935430285308e-06);
	fConst549 = (4.61647902575771e-22 * fConst21);
	fConst550 = ((fConst21 * (2.35440430313643e-14 + (fConst21 * (fConst549 - 6.94780093376535e-18)))) - 1.39967715142654e-10);
	fConst551 = (4.61647902575771e-19 * fConst21);
	fConst552 = ((fConst21 * (4.66264381601528e-15 - fConst551)) - 2.30823951287885e-13);
	fConst553 = (4.57031423550013e-19 * fConst21);
	fConst554 = (4.61647902575771e-13 + (fConst21 * (fConst553 - 4.6395614208865e-15)));
	fConst555 = (4.61647902575771e-21 * fConst21);
	fConst556 = (4.61647902575771e-15 + (fConst21 * (fConst555 - 4.6395614208865e-17)));
	fConst557 = (9.23295805151541e-20 * fConst21);
	fConst558 = (1.39967715142654e-08 + (fConst21 * ((fConst21 * (1.15873623546518e-15 - fConst557)) - 5.13067621086072e-12)));
	fConst559 = (9.18679326125784e-20 * fConst21);
	fConst560 = ((fConst21 * (5.15375860598951e-12 + (fConst21 * (fConst559 - 1.15642799595231e-15)))) - 1.39967715142654e-08);
	fConst561 = ((fConst21 * (4.74893268461376e-13 + (fConst21 * (fConst531 - 6.74157594007769e-17)))) - 2.90429276448603e-10);
	fConst562 = ((fConst21 * (2.58984473345007e-15 + (fConst21 * (fConst533 - 5.73274365418592e-18)))) - 5.0319621380759e-13);
	fConst563 = (4.61647902575771e-14 + (fConst21 * ((fConst21 * (6.47230359411231e-18 - fConst535)) - 1.33877891746973e-15)));
	fConst564 = (fConst21 * (1.0156253856667e-13 + (fConst21 * (fConst537 - 6.48153655216382e-16))));
	fConst565 = (4.61647902575771e-12 + (fConst21 * ((fConst21 * (6.42613880385473e-16 - fConst539)) - 1.32954595941822e-13)));
	fConst566 = (4.61647902575771e-11 + (fConst21 * ((fConst21 * (6.01804205797775e-16 - fConst541)) - 2.39133613534249e-13)));
	fConst567 = ((fConst21 * (2.67386465171886e-13 + (fConst21 * (fConst543 - 5.96818408449956e-16)))) - 5.0319621380759e-11);
	fConst568 = (3.10728327616692e-06 + (fConst21 * ((fConst21 * (5.11834981897011e-11 + (fConst21 * (fConst545 - 7.28293766644376e-15)))) - 2.95412127107681e-08)));
	fConst569 = ((fConst21 * (2.73960527750481e-08 + (fConst21 * ((fConst21 * (7.32221506288674e-15 - fConst547)) - 5.13010455324519e-11)))) - 2.79935430285308e-06);
	fConst570 = (2.0386371377746e-20 * fConst21);
	fConst571 = ((fConst466 * (1.34831518801554e-16 - fConst570)) - 5.80858552897206e-10);
	fConst572 = (6.6477297970911e-22 * fConst21);
	fConst573 = ((fConst466 * (1.14654873083718e-17 - fConst572)) - 1.00639242761518e-12);
	fConst574 = (7.38636644121233e-22 * fConst21);
	fConst575 = (9.23295805151541e-14 + (fConst466 * (fConst574 - 1.29446071882246e-17)));
	fConst576 = (7.38636644121233e-20 * fConst21);
	fConst577 = (fConst466 * (1.29630731043276e-15 - fConst576));
	fConst578 = (7.31250277680021e-20 * fConst21);
	fConst579 = (9.23295805151541e-12 + (fConst466 * (fConst578 - 1.28522776077095e-15)));
	fConst580 = (5.90909315296986e-20 * fConst21);
	fConst581 = (9.23295805151541e-11 + (fConst466 * (fConst580 - 1.20360841159555e-15)));
	fConst582 = (5.84261585499895e-20 * fConst21);
	fConst583 = ((fConst466 * (1.19363681689991e-15 - fConst582)) - 1.00639242761518e-10);
	fConst584 = (2.21029629386838e-18 * fConst21);
	fConst585 = (1.24291331046677e-05 + (fConst21 * ((fConst466 * (1.45658753328875e-14 - fConst584)) - 5.90824254215363e-08)));
	fConst586 = (2.23068266524612e-18 * fConst21);
	fConst587 = ((fConst21 * (5.47921055500963e-08 + (fConst466 * (fConst586 - 1.46444301257735e-14)))) - 1.11974172114123e-05);
	fConst588 = (2.67755783493947e-15 - (1.10795496618185e-21 * fConst466));
	fConst589 = ((1.10795496618185e-19 * fConst466) - 2.03125077133339e-13);
	fConst590 = (2.65909191883644e-13 - (1.09687541652003e-19 * fConst466));
	fConst591 = (4.78267227068498e-13 - (8.8636397294548e-20 * fConst466));
	fConst592 = ((8.76392378249843e-20 * fConst466) - 5.34772930343773e-13);
	fConst593 = ((9.97159469563665e-22 * fConst466) - 5.17968946690015e-15);
	fConst594 = ((3.05795570666191e-20 * fConst466) - 9.49786536922751e-13);
	fConst595 = (1.86436996570015e-05 + (fConst466 * ((3.31544444080257e-18 * fConst466) - 1.02366996379402e-10)));
	fConst596 = ((fConst466 * (1.02602091064904e-10 - (3.34602399786919e-18 * fConst466))) - 1.67961258171185e-05);
	fConst597 = (5.80858552897206e-10 + (fConst466 * (0 - (1.34831518801554e-16 + fConst570))));
	fConst598 = (1.00639242761518e-12 + (fConst466 * (0 - (1.14654873083718e-17 + fConst572))));
	fConst599 = ((fConst466 * (1.29446071882246e-17 + fConst574)) - 9.23295805151541e-14);
	fConst600 = (fConst466 * (0 - (1.29630731043276e-15 + fConst576)));
	fConst601 = ((fConst466 * (1.28522776077095e-15 + fConst578)) - 9.23295805151541e-12);
	fConst602 = ((fConst466 * (1.20360841159555e-15 + fConst580)) - 9.23295805151541e-11);
	fConst603 = (1.00639242761518e-10 + (fConst466 * (0 - (1.19363681689991e-15 + fConst582))));
	fConst604 = (1.24291331046677e-05 + (fConst21 * (5.90824254215363e-08 + (fConst466 * (0 - (1.45658753328875e-14 + fConst584))))));
	fConst605 = ((fConst21 * ((fConst466 * (1.46444301257735e-14 + fConst586)) - 5.47921055500963e-08)) - 1.11974172114123e-05);
	fConst606 = (1.84659161030308e-21 * fConst21);
	fConst607 = ((fConst466 * (1.38956018675307e-17 - fConst606)) - 2.79935430285308e-10);
	fConst608 = (1.84659161030308e-18 * fConst21);
	fConst609 = (fConst608 - 9.32528763203057e-15);
	fConst610 = (1.82812569420005e-18 * fConst21);
	fConst611 = (9.27912284177299e-15 - fConst610);
	fConst612 = (9.27912284177299e-17 - fConst537);
	fConst613 = (3.69318322060617e-19 * fConst21);
	fConst614 = (2.79935430285308e-08 + (fConst466 * (fConst613 - 2.31747247093037e-15)));
	fConst615 = (3.67471730450314e-19 * fConst21);
	fConst616 = ((fConst466 * (2.31285599190461e-15 - fConst615)) - 2.79935430285308e-08);
	fConst617 = (4.61647902575771e-13 - (2.76988741545462e-18 * fConst466));
	fConst618 = ((2.74218854130008e-18 * fConst466) - 9.23295805151541e-13);
	fConst619 = ((2.76988741545462e-20 * fConst466) - 9.23295805151541e-15);
	fConst620 = (1.02613524217214e-11 - (5.53977483090925e-19 * fConst466));
	fConst621 = ((5.5120759567547e-19 * fConst466) - 1.0307517211979e-11);
	fConst622 = ((2.76988741545462e-21 * fConst466) - 4.70880860627286e-14);
	fConst623 = (2.79935430285308e-10 + (fConst466 * (0 - (1.38956018675307e-17 + fConst606))));
	fConst624 = (9.32528763203057e-15 + fConst608);
	fConst625 = (0 - (9.27912284177299e-15 + fConst610));
	fConst626 = (0 - (9.27912284177299e-17 + fConst537));
	fConst627 = ((fConst466 * (2.31747247093037e-15 + fConst613)) - 2.79935430285308e-08);
	fConst628 = (2.79935430285308e-08 + (fConst466 * (0 - (2.31285599190461e-15 + fConst615))));
	fConst629 = (1.39967715142654e-10 + (fConst21 * (2.35440430313643e-14 + (fConst21 * (6.94780093376535e-18 + fConst549)))));
	fConst630 = ((fConst21 * (0 - (4.66264381601528e-15 + fConst551))) - 2.30823951287885e-13);
	fConst631 = (4.61647902575771e-13 + (fConst21 * (4.6395614208865e-15 + fConst553)));
	fConst632 = (4.61647902575771e-15 + (fConst21 * (4.6395614208865e-17 + fConst555)));
	fConst633 = ((fConst21 * ((fConst21 * (0 - (1.15873623546518e-15 + fConst557))) - 5.13067621086072e-12)) - 1.39967715142654e-08);
	fConst634 = (1.39967715142654e-08 + (fConst21 * (5.15375860598951e-12 + (fConst21 * (1.15642799595231e-15 + fConst559)))));
	fConst635 = (5.14362813305331e-21 * fConst21);
	fConst636 = (2.53393148251642e-10 + (fConst21 * (4.18387811921173e-13 + (fConst21 * (6.63229847822831e-17 + fConst635)))));
	fConst637 = (1.67727004338695e-22 * fConst21);
	fConst638 = (5.07840096469938e-13 + (fConst21 * (2.61374581761133e-15 + (fConst21 * (5.78564983299421e-18 + fConst637)))));
	fConst639 = (1.86363338154106e-22 * fConst21);
	fConst640 = ((fConst21 * ((fConst21 * (0 - (6.5320350023014e-18 + fConst639))) - 1.35113420161727e-15)) - 4.65908345385264e-14);
	fConst641 = (1.86363338154106e-20 * fConst21);
	fConst642 = (fConst21 * (1.02499835984758e-13 + (fConst21 * (6.5413531692091e-16 + fConst641))));
	fConst643 = (1.84499704772565e-20 * fConst21);
	fConst644 = ((fConst21 * ((fConst21 * (0 - (6.48544416776287e-16 + fConst643))) - 1.34181603470956e-13)) - 4.65908345385264e-12);
	fConst645 = (1.49090670523284e-20 * fConst21);
	fConst646 = ((fConst21 * ((fConst21 * (0 - (6.0735811904423e-16 + fConst645))) - 2.41340522909567e-13)) - 4.65908345385264e-11);
	fConst647 = (1.47413400479898e-20 * fConst21);
	fConst648 = (5.07840096469938e-11 + (fConst21 * (2.69854113647145e-13 + (fConst21 * (6.02326308914069e-16 + fConst647)))));
	fConst649 = (5.57673653092345e-19 * fConst21);
	fConst650 = (2.70332728583768e-06 + (fConst21 * (2.57728213628931e-08 + (fConst21 * (4.50642561961587e-11 + (fConst21 * (7.16478089063871e-15 + fConst649)))))));
	fConst651 = (5.62817281225399e-19 * fConst21);
	fConst652 = ((fConst21 * ((fConst21 * ((fConst21 * (0 - (7.20270582995307e-15 + fConst651))) - 4.51314401795632e-11)) - 2.3899403906099e-08)) - 2.43542998724115e-06);
	fConst653 = (4.65908345385264e-22 * fConst21);
	fConst654 = ((fConst21 * (2.37613256146485e-14 + (fConst21 * (fConst653 - 7.01192059804822e-18)))) - 1.21771499362058e-10);
	fConst655 = (4.65908345385264e-19 * fConst21);
	fConst656 = ((fConst21 * (4.70567428839117e-15 - fConst655)) - 2.32954172692632e-13);
	fConst657 = (4.61249261931411e-19 * fConst21);
	fConst658 = (4.65908345385264e-13 + (fConst21 * (fConst657 - 4.6823788711219e-15)));
	fConst659 = (4.65908345385264e-21 * fConst21);
	fConst660 = (4.65908345385264e-15 + (fConst21 * (fConst659 - 4.6823788711219e-17)));
	fConst661 = (9.31816690770528e-20 * fConst21);
	fConst662 = (1.21771499362058e-08 + (fConst21 * ((fConst21 * (1.16942994691701e-15 - fConst661)) - 4.78826713143674e-12)));
	fConst663 = (9.27157607316675e-20 * fConst21);
	fConst664 = ((fConst21 * (4.811562548706e-12 + (fConst21 * (fConst663 - 1.16710040519009e-15)))) - 1.21771499362058e-08);
	fConst665 = ((fConst21 * (4.18387811921173e-13 + (fConst21 * (fConst635 - 6.63229847822831e-17)))) - 2.53393148251642e-10);
	fConst666 = ((fConst21 * (2.61374581761133e-15 + (fConst21 * (fConst637 - 5.78564983299421e-18)))) - 5.07840096469938e-13);
	fConst667 = (4.65908345385264e-14 + (fConst21 * ((fConst21 * (6.5320350023014e-18 - fConst639)) - 1.35113420161727e-15)));
	fConst668 = (fConst21 * (1.02499835984758e-13 + (fConst21 * (fConst641 - 6.5413531692091e-16))));
	fConst669 = (4.65908345385264e-12 + (fConst21 * ((fConst21 * (6.48544416776287e-16 - fConst643)) - 1.34181603470956e-13)));
	fConst670 = (4.65908345385264e-11 + (fConst21 * ((fConst21 * (6.0735811904423e-16 - fConst645)) - 2.41340522909567e-13)));
	fConst671 = ((fConst21 * (2.69854113647145e-13 + (fConst21 * (fConst647 - 6.02326308914069e-16)))) - 5.07840096469938e-11);
	fConst672 = (2.70332728583768e-06 + (fConst21 * ((fConst21 * (4.50642561961587e-11 + (fConst21 * (fConst649 - 7.16478089063871e-15)))) - 2.57728213628931e-08)));
	fConst673 = ((fConst21 * (2.3899403906099e-08 + (fConst21 * ((fConst21 * (7.20270582995307e-15 - fConst651)) - 4.51314401795632e-11)))) - 2.43542998724115e-06);
	fConst674 = (2.05745125322133e-20 * fConst21);
	fConst675 = ((fConst466 * (1.32645969564566e-16 - fConst674)) - 5.06786296503284e-10);
	fConst676 = (6.7090801735478e-22 * fConst21);
	fConst677 = ((fConst466 * (1.15712996659884e-17 - fConst676)) - 1.01568019293988e-12);
	fConst678 = (7.45453352616422e-22 * fConst21);
	fConst679 = (9.31816690770528e-14 + (fConst466 * (fConst678 - 1.30640700046028e-17)));
	fConst680 = (7.45453352616422e-20 * fConst21);
	fConst681 = (fConst466 * (1.30827063384182e-15 - fConst680));
	fConst682 = (7.37998819090258e-20 * fConst21);
	fConst683 = (9.31816690770528e-12 + (fConst466 * (fConst682 - 1.29708883355257e-15)));
	fConst684 = (5.96362682093138e-20 * fConst21);
	fConst685 = (9.31816690770528e-11 + (fConst466 * (fConst684 - 1.21471623808846e-15)));
	fConst686 = (5.8965360191959e-20 * fConst21);
	fConst687 = ((fConst466 * (1.20465261782814e-15 - fConst686)) - 1.01568019293988e-10);
	fConst688 = (2.23069461236938e-18 * fConst21);
	fConst689 = (1.08133091433507e-05 + (fConst21 * ((fConst466 * (1.43295617812774e-14 - fConst688)) - 5.15456427257863e-08)));
	fConst690 = (2.2512691249016e-18 * fConst21);
	fConst691 = ((fConst21 * (4.7798807812198e-08 + (fConst466 * (fConst690 - 1.44054116599061e-14)))) - 9.74171994896461e-06);
	fConst692 = (2.70226840323453e-15 - (1.11818002892463e-21 * fConst466));
	fConst693 = ((1.11818002892463e-19 * fConst466) - 2.04999671969516e-13);
	fConst694 = (2.68363206941912e-13 - (1.10699822863539e-19 * fConst466));
	fConst695 = (4.82681045819133e-13 - (8.94544023139707e-20 * fConst466));
	fConst696 = ((8.84480402879385e-20 * fConst466) - 5.3970822729429e-13);
	fConst697 = ((1.00636202603217e-21 * fConst466) - 5.22749163522266e-15);
	fConst698 = ((3.08617687983199e-20 * fConst466) - 8.36775623842347e-13);
	fConst699 = (1.62199637150261e-05 + (fConst466 * ((3.34604191855407e-18 * fConst466) - 9.01285123923174e-11)));
	fConst700 = ((fConst466 * (9.02628803591265e-11 - (3.37690368735239e-18 * fConst466))) - 1.46125799234469e-05);
	fConst701 = (5.06786296503284e-10 + (fConst466 * (0 - (1.32645969564566e-16 + fConst674))));
	fConst702 = (1.01568019293988e-12 + (fConst466 * (0 - (1.15712996659884e-17 + fConst676))));
	fConst703 = ((fConst466 * (1.30640700046028e-17 + fConst678)) - 9.31816690770528e-14);
	fConst704 = (fConst466 * (0 - (1.30827063384182e-15 + fConst680)));
	fConst705 = ((fConst466 * (1.29708883355257e-15 + fConst682)) - 9.31816690770528e-12);
	fConst706 = ((fConst466 * (1.21471623808846e-15 + fConst684)) - 9.31816690770528e-11);
	fConst707 = (1.01568019293988e-10 + (fConst466 * (0 - (1.20465261782814e-15 + fConst686))));
	fConst708 = (1.08133091433507e-05 + (fConst21 * (5.15456427257863e-08 + (fConst466 * (0 - (1.43295617812774e-14 + fConst688))))));
	fConst709 = ((fConst21 * ((fConst466 * (1.44054116599061e-14 + fConst690)) - 4.7798807812198e-08)) - 9.74171994896461e-06);
	fConst710 = (1.86363338154106e-21 * fConst21);
	fConst711 = ((fConst466 * (1.40238411960964e-17 - fConst710)) - 2.43542998724115e-10);
	fConst712 = (1.86363338154106e-18 * fConst21);
	fConst713 = (fConst712 - 9.41134857678233e-15);
	fConst714 = (1.84499704772565e-18 * fConst21);
	fConst715 = (9.36475774224381e-15 - fConst714);
	fConst716 = (9.3647577422438e-17 - fConst641);
	fConst717 = (3.72726676308211e-19 * fConst21);
	fConst718 = (2.43542998724115e-08 + (fConst466 * (fConst717 - 2.33885989383402e-15)));
	fConst719 = (3.7086304292667e-19 * fConst21);
	fConst720 = ((fConst466 * (2.33420081038017e-15 - fConst719)) - 2.43542998724115e-08);
	fConst721 = (4.65908345385264e-13 - (2.79545007231158e-18 * fConst466));
	fConst722 = ((2.76749557158847e-18 * fConst466) - 9.31816690770528e-13);
	fConst723 = ((2.79545007231158e-20 * fConst466) - 9.31816690770528e-15);
	fConst724 = (9.57653426287347e-12 - (5.59090014462317e-19 * fConst466));
	fConst725 = ((5.56294564390005e-19 * fConst466) - 9.623125097412e-12);
	fConst726 = ((2.79545007231158e-21 * fConst466) - 4.75226512292969e-14);
	fConst727 = (2.43542998724115e-10 + (fConst466 * (0 - (1.40238411960964e-17 + fConst710))));
	fConst728 = (9.41134857678233e-15 + fConst712);
	fConst729 = (0 - (9.36475774224381e-15 + fConst714));
	fConst730 = (0 - (9.3647577422438e-17 + fConst641));
	fConst731 = ((fConst466 * (2.33885989383402e-15 + fConst717)) - 2.43542998724115e-08);
	fConst732 = (2.43542998724115e-08 + (fConst466 * (0 - (2.33420081038017e-15 + fConst719))));
	fConst733 = (1.21771499362058e-10 + (fConst21 * (2.37613256146485e-14 + (fConst21 * (7.01192059804822e-18 + fConst653)))));
	fConst734 = ((fConst21 * (0 - (4.70567428839117e-15 + fConst655))) - 2.32954172692632e-13);
	fConst735 = (4.65908345385264e-13 + (fConst21 * (4.6823788711219e-15 + fConst657)));
	fConst736 = (4.65908345385264e-15 + (fConst21 * (4.6823788711219e-17 + fConst659)));
	fConst737 = ((fConst21 * ((fConst21 * (0 - (1.16942994691701e-15 + fConst661))) - 4.78826713143674e-12)) - 1.21771499362058e-08);
	fConst738 = (1.21771499362058e-08 + (fConst21 * (4.811562548706e-12 + (fConst21 * (1.16710040519009e-15 + fConst663)))));
	fConst739 = tan((20461.192952830323 / double(iConst0)));
	fConst740 = (2 * (1 - (1.0 / faustpower<2>(fConst739))));
	fConst741 = (1.0 / fConst739);
	fConst742 = (1 + ((fConst741 - 1.0000000000000004) / fConst739));
	fConst743 = (1.0 / (1 + ((1.0000000000000004 + fConst741) / fConst739)));
	IOTA = 0;
	fConst744 = (1 + fConst741);
	fConst745 = (2.0 / fConst744);
	fConst746 = (0 - ((1 - fConst741) / fConst744));
	fConst747 = (3.44311187407419e-13 * fConst21);
	fConst748 = ((fConst21 * (2.16776440355014e-12 - fConst747)) - 1.66185299357055e-13);
	fConst749 = (1.03293356222226e-12 * fConst21);
	fConst750 = ((fConst21 * (fConst749 - 2.16776440355014e-12)) - 1.66185299357055e-13);
	fConst751 = (1.66185299357055e-13 + (fConst21 * (0 - (2.16776440355014e-12 + fConst749))));
	fConst752 = (1.66185299357055e-13 + (fConst21 * (2.16776440355014e-12 + fConst747)));
	fConst753 = (fConst21 / fConst27);
	fConst754 = (1256.6370614359173 * fConst11);
	fConst755 = (1 + ((fConst13 - fConst754) / fConst7));
	fConst756 = (1 + ((fConst754 + fConst13) / fConst7));
	fConst757 = (2 * (0 - fConst2));
	clear_state_f();
}

void Dsp::init_static(uint32_t samplingFreq, PluginLV2 *p)
{
	static_cast<Dsp*>(p)->init(samplingFreq);
}

void always_inline Dsp::compute(int count, FAUSTFLOAT *input0, FAUSTFLOAT *output0)
{
#define fslider0 (*fslider0_)
#define fslider1 (*fslider1_)
#define fslider2 (*fslider2_)
#define fslider3 (*fslider3_)
#define fslider4 (*fslider4_)
#define fslider5 (*fslider5_)
#define fslider6 (*fslider6_)
#define fslider7 (*fslider7_)
#define fslider8 (*fslider8_)
#define fslider9 (*fslider9_)
	double 	fSlow0 = (fConst29 * double(fslider0));
	double 	fSlow1 = double(fslider1);
	double 	fSlow2 = (0.007000000000000006 * (1 - double(fslider2)));
	double 	fSlow3 = (0.007000000000000006 * double(fslider3));
	double 	fSlow4 = (4.748558434412966e-05 * (exp((5 * double(fslider4))) - 1));
	int 	iSlow5 = int(double(fslider5));
	int 	iSlow6 = int(double(fslider6));
	int 	iSlow7 = int(double(fslider7));
	double 	fSlow8 = (0.06 * double(fslider8));
	int 	iSlow9 = int(double(fslider9));
	for (int i=0; i<count; i++) {
		iVec0[0] = 1;
		double fTemp0 = (fConst8 * fRec1[1]);
		double fTemp1 = (fRec4[1] * (1 - (fConst9 / (fConst9 + (0.06 * exp((0 - (2.4849066497880004 * fRec4[1]))))))));
		fRec7[0] = (fRec7[1] + (fSlow0 * (0 - fRec5[1])));
		fRec6[0] = ((1 + (fRec6[1] + (fSlow0 * fRec7[0]))) - iVec0[1]);
		fRec5[0] = fRec6[0];
		fRec4[0] = (fTemp1 + (fConst9 * (pow((1 + (fSlow1 * (max((double)0, (0.5 * (1 + fRec5[0]))) - 1))),1.9) / (fConst9 + (0.06 * exp((0 - (2.4849066497880004 * fTemp1))))))));
		fRec8[0] = ((0.993 * fRec8[1]) + fSlow2);
		fRec9[0] = ((0.993 * fRec9[1]) + fSlow3);
		double fTemp2 = (2.84032843783859e-09 + ((fRec8[0] * ((fConst47 * fRec8[0]) + fConst45)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst43 + (fConst41 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst39 + (fConst37 * fRec8[0]))) + fConst35))) + fConst33)) + fConst31))));
		double fTemp3 = (double)input0[i];
		fRec10[0] = (fTemp3 - ((((((fRec10[1] * (1.4201642189193e-08 + ((fRec8[0] * ((fConst121 * fRec8[0]) + fConst120)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst119 + (fConst118 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst117 + (fConst116 * fRec8[0]))) + fConst115))) + fConst114)) + fConst113))))) + (fRec10[2] * (2.8403284378386e-08 + ((fRec8[0] * ((fConst112 * fRec8[0]) + fConst111)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst110 + (fConst109 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst108 + (fConst107 * fRec8[0]))) + fConst106))) + fConst105)) + fConst104)))))) + (fRec10[3] * (2.8403284378386e-08 + ((fRec8[0] * ((fConst103 * fRec8[0]) + fConst101)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst99 + (fConst97 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst95 + (fConst93 * fRec8[0]))) + fConst91))) + fConst89)) + fConst87)))))) + (fRec10[4] * (1.4201642189193e-08 + ((fRec8[0] * ((fConst85 * fRec8[0]) + fConst83)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst81 + (fConst79 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst77 + (fConst75 * fRec8[0]))) + fConst74))) + fConst72)) + fConst70)))))) + (fRec10[5] * (2.84032843783859e-09 + ((fRec8[0] * ((fConst68 * fRec8[0]) + fConst67)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst66 + (fConst65 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst64 + (fConst63 * fRec8[0]))) + fConst62))) + fConst61)) + fConst60)))))) / fTemp2));
		fRec11[0] = ((0.993 * fRec11[1]) + fSlow4);
		double fTemp4 = (6.32838466389946e-10 + ((fRec8[0] * ((fConst179 * fRec8[0]) + fConst177)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst175 + (fConst173 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst171 + (fConst169 * fRec8[0]))) + fConst167))) + fConst165)) + fConst163))));
		fRec12[0] = (fTemp3 - ((((((fRec12[1] * (3.16419233194973e-09 + ((fRec8[0] * ((fConst253 * fRec8[0]) + fConst252)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst251 + (fConst250 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst249 + (fConst248 * fRec8[0]))) + fConst247))) + fConst246)) + fConst245))))) + (fRec12[2] * (6.32838466389946e-09 + ((fRec8[0] * ((fConst244 * fRec8[0]) + fConst243)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst242 + (fConst241 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst240 + (fConst239 * fRec8[0]))) + fConst238))) + fConst237)) + fConst236)))))) + (fRec12[3] * (6.32838466389946e-09 + ((fRec8[0] * ((fConst235 * fRec8[0]) + fConst233)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst231 + (fConst229 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst227 + (fConst225 * fRec8[0]))) + fConst223))) + fConst221)) + fConst219)))))) + (fRec12[4] * (3.16419233194973e-09 + ((fRec8[0] * ((fConst217 * fRec8[0]) + fConst215)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst213 + (fConst211 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst209 + (fConst207 * fRec8[0]))) + fConst206))) + fConst204)) + fConst202)))))) + (fRec12[5] * (6.32838466389946e-10 + ((fRec8[0] * ((fConst200 * fRec8[0]) + fConst199)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst198 + (fConst197 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst196 + (fConst195 * fRec8[0]))) + fConst194))) + fConst193)) + fConst192)))))) / fTemp4));
		double fTemp5 = (1.36566748518093e-10 + ((fRec8[0] * ((fConst311 * fRec8[0]) + fConst309)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst307 + (fConst305 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst303 + (fConst301 * fRec8[0]))) + fConst299))) + fConst297)) + fConst295))));
		fRec13[0] = (fTemp3 - ((((((fRec13[1] * (6.82833742590467e-10 + ((fRec8[0] * ((fConst385 * fRec8[0]) + fConst384)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst383 + (fConst382 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst381 + (fConst380 * fRec8[0]))) + fConst379))) + fConst378)) + fConst377))))) + (fRec13[2] * (1.36566748518093e-09 + ((fRec8[0] * ((fConst376 * fRec8[0]) + fConst375)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst374 + (fConst373 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst372 + (fConst371 * fRec8[0]))) + fConst370))) + fConst369)) + fConst368)))))) + (fRec13[3] * (1.36566748518093e-09 + ((fRec8[0] * ((fConst367 * fRec8[0]) + fConst365)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst363 + (fConst361 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst359 + (fConst357 * fRec8[0]))) + fConst355))) + fConst353)) + fConst351)))))) + (fRec13[4] * (6.82833742590467e-10 + ((fRec8[0] * ((fConst349 * fRec8[0]) + fConst347)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst345 + (fConst343 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst341 + (fConst339 * fRec8[0]))) + fConst338))) + fConst336)) + fConst334)))))) + (fRec13[5] * (1.36566748518093e-10 + ((fRec8[0] * ((fConst332 * fRec8[0]) + fConst331)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst330 + (fConst329 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst328 + (fConst327 * fRec8[0]))) + fConst326))) + fConst325)) + fConst324)))))) / fTemp5));
		double fTemp6 = (4.91290816335075e-08 + ((fRec8[0] * ((fConst443 * fRec8[0]) + fConst441)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst439 + (fConst437 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst435 + (fConst433 * fRec8[0]))) + fConst431))) + fConst429)) + fConst427))));
		fRec14[0] = (fTemp3 - (((((fRec14[1] * (1.9651632653403e-07 + ((fRec8[0] * ((fConst501 * fRec8[0]) + fConst500)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst499 + (fConst498 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst497 + (fConst496 * fRec8[0]))) + fConst495))) + fConst494)) + fConst493))))) + (fRec14[2] * (2.94774489801045e-07 + ((fRec8[0] * ((fConst492 * fRec8[0]) + fConst491)) + (fConst466 * (fConst490 + (fRec9[0] * (fConst489 + ((fRec8[0] * (fConst488 + (fConst487 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst486 + (fConst485 * fRec8[0]))) + fConst484))))))))))) + (fRec14[3] * (1.9651632653403e-07 + ((fRec8[0] * ((fConst483 * fRec8[0]) + fConst481)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst479 + (fConst477 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst475 + (fConst473 * fRec8[0]))) + fConst471))) + fConst469)) + fConst467)))))) + (fRec14[4] * (4.91290816335075e-08 + ((fRec8[0] * ((fConst464 * fRec8[0]) + fConst463)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst462 + (fConst461 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst460 + (fConst459 * fRec8[0]))) + fConst458))) + fConst457)) + fConst456)))))) / fTemp6));
		double fTemp7 = (3.10728327616692e-08 + ((fRec8[0] * ((fConst548 * fRec8[0]) + fConst546)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst544 + (fConst542 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst540 + (fConst538 * fRec8[0]))) + fConst536))) + fConst534)) + fConst532))));
		fRec15[0] = (fTemp3 - (((((fRec15[1] * (1.24291331046677e-07 + ((fRec8[0] * ((fConst605 * fRec8[0]) + fConst604)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst603 + (fConst602 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst601 + (fConst600 * fRec8[0]))) + fConst599))) + fConst598)) + fConst597))))) + (fRec15[2] * (1.86436996570015e-07 + ((fRec8[0] * ((fConst596 * fRec8[0]) + fConst595)) + (fConst466 * (fConst594 + (fRec9[0] * (fConst593 + ((fRec8[0] * (fConst592 + (fConst591 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst590 + (fConst589 * fRec8[0]))) + fConst588))))))))))) + (fRec15[3] * (1.24291331046677e-07 + ((fRec8[0] * ((fConst587 * fRec8[0]) + fConst585)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst583 + (fConst581 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst579 + (fConst577 * fRec8[0]))) + fConst575))) + fConst573)) + fConst571)))))) + (fRec15[4] * (3.10728327616692e-08 + ((fRec8[0] * ((fConst569 * fRec8[0]) + fConst568)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst567 + (fConst566 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst565 + (fConst564 * fRec8[0]))) + fConst563))) + fConst562)) + fConst561)))))) / fTemp7));
		double fTemp8 = (2.70332728583768e-08 + ((fRec8[0] * ((fConst652 * fRec8[0]) + fConst650)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst648 + (fConst646 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst644 + (fConst642 * fRec8[0]))) + fConst640))) + fConst638)) + fConst636))));
		fRec16[0] = (fTemp3 - (((((fRec16[1] * (1.08133091433507e-07 + ((fRec8[0] * ((fConst709 * fRec8[0]) + fConst708)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst707 + (fConst706 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst705 + (fConst704 * fRec8[0]))) + fConst703))) + fConst702)) + fConst701))))) + (fRec16[2] * (1.62199637150261e-07 + ((fRec8[0] * ((fConst700 * fRec8[0]) + fConst699)) + (fConst466 * (fConst698 + (fRec9[0] * (fConst697 + ((fRec8[0] * (fConst696 + (fConst695 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst694 + (fConst693 * fRec8[0]))) + fConst692))))))))))) + (fRec16[3] * (1.08133091433507e-07 + ((fRec8[0] * ((fConst691 * fRec8[0]) + fConst689)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst687 + (fConst685 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst683 + (fConst681 * fRec8[0]))) + fConst679))) + fConst677)) + fConst675)))))) + (fRec16[4] * (2.70332728583768e-08 + ((fRec8[0] * ((fConst673 * fRec8[0]) + fConst672)) + (fConst21 * ((fRec9[0] * (((fRec8[0] * (fConst671 + (fConst670 * fRec8[0]))) + (fRec9[0] * ((fRec8[0] * (fConst669 + (fConst668 * fRec8[0]))) + fConst667))) + fConst666)) + fConst665)))))) / fTemp8));
		double fTemp9 = ((iSlow6)?((iSlow5==0)? (fConst21 * ((fRec11[0] * (((((fRec16[0] * (((fRec8[0] * (fConst738 + (fConst737 * fRec8[0]))) + (fConst21 * (fRec9[0] * (fConst736 + (fRec8[0] * (fConst735 + (fConst734 * fRec8[0]))))))) + fConst733)) + (fRec16[1] * (((fRec8[0] * (fConst732 + (fConst731 * fRec8[0]))) + (fConst466 * (fRec9[0] * (fConst730 + (fRec8[0] * (fConst729 + (fConst728 * fRec8[0]))))))) + fConst727))) + (fConst21 * (fRec16[2] * (fConst726 + ((fRec8[0] * (fConst725 + (fConst724 * fRec8[0]))) + (fRec9[0] * (fConst723 + (fRec8[0] * (fConst722 + (fConst721 * fRec8[0])))))))))) + (fRec16[3] * (((fRec8[0] * (fConst720 + (fConst718 * fRec8[0]))) + (fConst466 * (fRec9[0] * (fConst716 + (fRec8[0] * (fConst715 + (fConst713 * fRec8[0]))))))) + fConst711))) + (fRec16[4] * (((fRec8[0] * (fConst664 + (fConst662 * fRec8[0]))) + (fConst21 * (fRec9[0] * (fConst660 + (fRec8[0] * (fConst658 + (fConst656 * fRec8[0]))))))) + fConst654)))) / fTemp8)) : ((iSlow5==1)?(fConst21 * ((fRec11[0] * (((((fRec15[0] * (((fRec8[0] * (fConst634 + (fConst633 * fRec8[0]))) + (fConst21 * (fRec9[0] * (fConst632 + (fRec8[0] * (fConst631 + (fConst630 * fRec8[0]))))))) + fConst629)) + (fRec15[1] * (((fRec8[0] * (fConst628 + (fConst627 * fRec8[0]))) + (fConst466 * (fRec9[0] * (fConst626 + (fRec8[0] * (fConst625 + (fConst624 * fRec8[0]))))))) + fConst623))) + (fConst21 * (fRec15[2] * (fConst622 + ((fRec8[0] * (fConst621 + (fConst620 * fRec8[0]))) + (fRec9[0] * (fConst619 + (fRec8[0] * (fConst618 + (fConst617 * fRec8[0])))))))))) + (fRec15[3] * (((fRec8[0] * (fConst616 + (fConst614 * fRec8[0]))) + (fConst466 * (fRec9[0] * (fConst612 + (fRec8[0] * (fConst611 + (fConst609 * fRec8[0]))))))) + fConst607))) + (fRec15[4] * (((fRec8[0] * (fConst560 + (fConst558 * fRec8[0]))) + (fConst21 * (fRec9[0] * (fConst556 + (fRec8[0] * (fConst554 + (fConst552 * fRec8[0]))))))) + fConst550)))) / fTemp7)):(fConst21 * ((fRec11[0] * (((((fRec14[0] * (((fRec8[0] * (fConst530 + (fConst529 * fRec8[0]))) + (fConst21 * (fRec9[0] * (fConst528 + (fRec8[0] * (fConst527 + (fConst526 * fRec8[0]))))))) + fConst525)) + (fRec14[1] * (((fRec8[0] * (fConst524 + (fConst523 * fRec8[0]))) + (fConst466 * (fRec9[0] * (fConst522 + (fRec8[0] * (fConst521 + (fConst520 * fRec8[0]))))))) + fConst519))) + (fConst21 * (fRec14[2] * (fConst518 + ((fRec8[0] * (fConst517 + (fConst516 * fRec8[0]))) + (fRec9[0] * (fConst515 + (fRec8[0] * (fConst514 + (fConst513 * fRec8[0])))))))))) + (fRec14[3] * (((fRec8[0] * (fConst512 + (fConst510 * fRec8[0]))) + (fConst466 * (fRec9[0] * (fConst508 + (fRec8[0] * (fConst507 + (fConst505 * fRec8[0]))))))) + fConst503))) + (fRec14[4] * (((fRec8[0] * (fConst455 + (fConst453 * fRec8[0]))) + (fConst21 * (fRec9[0] * (fConst451 + (fRec8[0] * (fConst449 + (fConst447 * fRec8[0]))))))) + fConst445)))) / fTemp6))) ):((iSlow5==0)? (fConst21 * ((fRec11[0] * ((((((fRec13[0] * (((fRec8[0] * (fConst425 + (fConst424 * fRec8[0]))) + (fConst21 * (fRec9[0] * (fConst423 + (fRec8[0] * (fConst422 + (fConst421 * fRec8[0]))))))) + fConst420)) + (fRec13[1] * (((fRec8[0] * (fConst419 + (fConst418 * fRec8[0]))) + (fConst21 * (fRec9[0] * (fConst417 + (fRec8[0] * (fConst416 + (fConst415 * fRec8[0]))))))) + fConst414))) + (fRec13[2] * (((fRec8[0] * (fConst413 + (fConst412 * fRec8[0]))) + (fConst21 * (fRec9[0] * (fConst411 + (fRec8[0] * (fConst410 + (fConst409 * fRec8[0]))))))) + fConst408))) + (fRec13[3] * (((fRec8[0] * (fConst407 + (fConst405 * fRec8[0]))) + (fConst21 * (fRec9[0] * (fConst403 + (fRec8[0] * (fConst401 + (fConst399 * fRec8[0]))))))) + fConst397))) + (fRec13[4] * (((fRec8[0] * (fConst396 + (fConst394 * fRec8[0]))) + (fConst21 * (fRec9[0] * (fConst393 + (fRec8[0] * (fConst391 + (fConst389 * fRec8[0]))))))) + fConst387))) + (fRec13[5] * (((fRec8[0] * (fConst323 + (fConst321 * fRec8[0]))) + (fConst21 * (fRec9[0] * (fConst319 + (fRec8[0] * (fConst317 + (fConst315 * fRec8[0]))))))) + fConst313)))) / fTemp5)) : ((iSlow5==1)?(fConst21 * ((fRec11[0] * ((((((fRec12[0] * (((fRec8[0] * (fConst293 + (fConst292 * fRec8[0]))) + (fConst21 * (fRec9[0] * (fConst291 + (fRec8[0] * (fConst290 + (fConst289 * fRec8[0]))))))) + fConst288)) + (fRec12[1] * (((fRec8[0] * (fConst287 + (fConst286 * fRec8[0]))) + (fConst21 * (fRec9[0] * (fConst285 + (fRec8[0] * (fConst284 + (fConst283 * fRec8[0]))))))) + fConst282))) + (fRec12[2] * (((fRec8[0] * (fConst281 + (fConst280 * fRec8[0]))) + (fConst21 * (fRec9[0] * (fConst279 + (fRec8[0] * (fConst278 + (fConst277 * fRec8[0]))))))) + fConst276))) + (fRec12[3] * (((fRec8[0] * (fConst275 + (fConst273 * fRec8[0]))) + (fConst21 * (fRec9[0] * (fConst271 + (fRec8[0] * (fConst269 + (fConst267 * fRec8[0]))))))) + fConst265))) + (fRec12[4] * (((fRec8[0] * (fConst264 + (fConst262 * fRec8[0]))) + (fConst21 * (fRec9[0] * (fConst261 + (fRec8[0] * (fConst259 + (fConst257 * fRec8[0]))))))) + fConst255))) + (fRec12[5] * (((fRec8[0] * (fConst191 + (fConst189 * fRec8[0]))) + (fConst21 * (fRec9[0] * (fConst187 + (fRec8[0] * (fConst185 + (fConst183 * fRec8[0]))))))) + fConst181)))) / fTemp4)):(fConst21 * ((fRec11[0] * ((((((fRec10[0] * (((fRec8[0] * (fConst161 + (fConst160 * fRec8[0]))) + (fConst21 * (fRec9[0] * (fConst159 + (fRec8[0] * (fConst158 + (fConst157 * fRec8[0]))))))) + fConst156)) + (fRec10[1] * (((fRec8[0] * (fConst155 + (fConst154 * fRec8[0]))) + (fConst21 * (fRec9[0] * (fConst153 + (fRec8[0] * (fConst152 + (fConst151 * fRec8[0]))))))) + fConst150))) + (fRec10[2] * (((fRec8[0] * (fConst149 + (fConst148 * fRec8[0]))) + (fConst21 * (fRec9[0] * (fConst147 + (fRec8[0] * (fConst146 + (fConst145 * fRec8[0]))))))) + fConst144))) + (fRec10[3] * (((fRec8[0] * (fConst143 + (fConst141 * fRec8[0]))) + (fConst21 * (fRec9[0] * (fConst139 + (fRec8[0] * (fConst137 + (fConst135 * fRec8[0]))))))) + fConst133))) + (fRec10[4] * (((fRec8[0] * (fConst132 + (fConst130 * fRec8[0]))) + (fConst21 * (fRec9[0] * (fConst129 + (fRec8[0] * (fConst127 + (fConst125 * fRec8[0]))))))) + fConst123))) + (fRec10[5] * (((fRec8[0] * (fConst59 + (fConst57 * fRec8[0]))) + (fConst21 * (fRec9[0] * (fConst55 + (fRec8[0] * (fConst53 + (fConst51 * fRec8[0]))))))) + fConst49)))) / fTemp2))) ));
		double fTemp10 = ((0.7 * fRec25[1]) + (fSlow8 * fTemp9));
		fVec1[IOTA&511] = fTemp10;
		fRec25[0] = fVec1[(IOTA-346)&511];
		double 	fRec26 = (0 - (0.7 * fVec1[IOTA&511]));
		double fTemp11 = (fRec25[1] + (fRec26 + (0.7 * fRec23[1])));
		fVec2[IOTA&127] = fTemp11;
		fRec23[0] = fVec2[(IOTA-112)&127];
		double 	fRec24 = (0 - (0.7 * fVec2[IOTA&127]));
		double fTemp12 = (fRec23[1] + (fRec24 + (0.7 * fRec21[1])));
		fVec3[IOTA&63] = fTemp12;
		fRec21[0] = fVec3[(IOTA-36)&63];
		double 	fRec22 = (0 - (0.7 * fVec3[IOTA&63]));
		double fTemp13 = (fRec22 + fRec21[1]);
		double fTemp14 = (fTemp13 + (0.733 * fRec19[1]));
		fVec4[IOTA&4095] = fTemp14;
		fRec19[0] = fVec4[(IOTA-2250)&4095];
		fRec20[0] = fVec4[IOTA&4095];
		double fTemp15 = (fTemp13 + (0.753 * fRec27[1]));
		fVec5[IOTA&4095] = fTemp15;
		fRec27[0] = fVec5[(IOTA-2052)&4095];
		fRec28[0] = fVec5[IOTA&4095];
		double fTemp16 = (fTemp13 + (0.773 * fRec29[1]));
		fVec6[IOTA&2047] = fTemp16;
		fRec29[0] = fVec6[(IOTA-1866)&2047];
		fRec30[0] = fVec6[IOTA&2047];
		double fTemp17 = (fRec21[1] + (fRec22 + (0.802 * fRec31[1])));
		fVec7[IOTA&2047] = fTemp17;
		fRec31[0] = fVec7[(IOTA-1600)&2047];
		fRec32[0] = fVec7[IOTA&2047];
		double fTemp18 = (((fRec32[1] + fRec30[1]) + fRec28[1]) + fRec20[1]);
		double fTemp19 = (fTemp18 + fTemp18);
		fVec8[0] = fTemp19;
		fRec18[0] = ((fConst746 * fRec18[1]) + (fConst745 * (fVec8[0] + fVec8[1])));
		fRec17[0] = (fRec18[0] - (fConst743 * ((fConst742 * fRec17[2]) + (fConst740 * fRec17[1]))));
		fRec3[0] = ((((iSlow9)?fTemp9:(fTemp9 + (fConst743 * (fRec17[2] + (fRec17[0] + (2 * fRec17[1])))))) + ((iSlow7)?fTemp9:(2700 * (fTemp9 / (2700 + exp((13.815510557964274 / log((2.718281828459045 + (8.551967507929417 * fRec4[0])))))))))) - (fConst28 * (((fConst26 * fRec3[1]) + (fConst25 * fRec3[2])) + (fConst23 * fRec3[3]))));
		fRec2[0] = ((fConst753 * ((((fConst752 * fRec3[0]) + (fConst751 * fRec3[1])) + (fConst750 * fRec3[2])) + (fConst748 * fRec3[3]))) - (fConst20 * ((fConst19 * fRec2[2]) + (fConst17 * fRec2[1]))));
		fRec1[0] = ((fConst20 * (fRec2[2] + (fRec2[0] + (2 * fRec2[1])))) - (fConst15 * ((fConst14 * fRec1[2]) + fTemp0)));
		fRec0[0] = ((fConst15 * ((fTemp0 + (fConst756 * fRec1[0])) + (fConst755 * fRec1[2]))) - (fConst6 * ((fConst5 * fRec0[2]) + (fConst3 * fRec0[1]))));
		output0[i] = (FAUSTFLOAT)(fConst6 * (((fConst2 * fRec0[0]) + (fConst757 * fRec0[1])) + (fConst2 * fRec0[2])));
		// post processing
		fRec0[2] = fRec0[1]; fRec0[1] = fRec0[0];
		fRec1[2] = fRec1[1]; fRec1[1] = fRec1[0];
		fRec2[2] = fRec2[1]; fRec2[1] = fRec2[0];
		for (int i=3; i>0; i--) fRec3[i] = fRec3[i-1];
		fRec17[2] = fRec17[1]; fRec17[1] = fRec17[0];
		fRec18[1] = fRec18[0];
		fVec8[1] = fVec8[0];
		fRec32[1] = fRec32[0];
		fRec31[1] = fRec31[0];
		fRec30[1] = fRec30[0];
		fRec29[1] = fRec29[0];
		fRec28[1] = fRec28[0];
		fRec27[1] = fRec27[0];
		fRec20[1] = fRec20[0];
		fRec19[1] = fRec19[0];
		fRec21[1] = fRec21[0];
		fRec23[1] = fRec23[0];
		fRec25[1] = fRec25[0];
		IOTA = IOTA+1;
		for (int i=4; i>0; i--) fRec16[i] = fRec16[i-1];
		for (int i=4; i>0; i--) fRec15[i] = fRec15[i-1];
		for (int i=4; i>0; i--) fRec14[i] = fRec14[i-1];
		for (int i=5; i>0; i--) fRec13[i] = fRec13[i-1];
		for (int i=5; i>0; i--) fRec12[i] = fRec12[i-1];
		fRec11[1] = fRec11[0];
		for (int i=5; i>0; i--) fRec10[i] = fRec10[i-1];
		fRec9[1] = fRec9[0];
		fRec8[1] = fRec8[0];
		fRec4[1] = fRec4[0];
		fRec5[1] = fRec5[0];
		fRec6[1] = fRec6[0];
		fRec7[1] = fRec7[0];
		iVec0[1] = iVec0[0];
	}
#undef fslider0
#undef fslider1
#undef fslider2
#undef fslider3
#undef fslider4
#undef fslider5
#undef fslider6
#undef fslider7
#undef fslider8
#undef fslider9
}
		
void __rt_func Dsp::compute_static(int count, FAUSTFLOAT *input0, FAUSTFLOAT *output0, PluginLV2 *p)
{
	static_cast<Dsp*>(p)->compute(count, input0, output0);
}


void Dsp::connect(uint32_t port,void* data)
{
	switch ((PortIndex)port)
	{
	case BASS: 
		fslider2_ = (float*)data; // , 0.5, 0.0, 1.0, 0.01 
		break;
	case DEPTH: 
		fslider1_ = (float*)data; // , 0.5, 0.0, 1.0, 0.01 
		break;
	// static const value_pair fslider5_values[] = {{"1"},{"2"},{"3"},{0}};
	case MRBSELECT: 
		fslider5_ = (float*)data; // , 0.0, 0.0, 2.0, 1.0 
		break;
	// static const value_pair fslider6_values[] = {{"ON"},{"OFF"},{0}};
	case MRB: 
		fslider6_ = (float*)data; // , 0.0, 0.0, 1.0, 1.0 
		break;
	case REVERBLEVEL: 
		fslider8_ = (float*)data; // , 0.5, 0.0, 1.0, 0.01 
		break;
	// static const value_pair fslider9_values[] = {{"ON"},{"OFF"},{0}};
	case REVERB: 
		fslider9_ = (float*)data; // , 2.0, 0.0, 2.0, 1.0 
		break;
	case SPEED: 
		fslider0_ = (float*)data; // , 0.5, 0.01, 1.0, 0.01 
		break;
	case TREBLE: 
		fslider3_ = (float*)data; // , 0.5, 0.0, 1.0, 0.01 
		break;
	// static const value_pair fslider7_values[] = {{"ON"},{"OFF"},{0}};
	case VIBE: 
		fslider7_ = (float*)data; // , 1.0, 0.0, 1.0, 1.0 
		break;
	case VOLUME: 
		fslider4_ = (float*)data; // , 0.5, 0.0, 1.0, 0.01 
		break;
	default:
		break;
	}
}

void Dsp::connect_static(uint32_t port,void* data, PluginLV2 *p)
{
	static_cast<Dsp*>(p)->connect(port, data);
}


PluginLV2 *plugin() {
	return new Dsp();
}

void Dsp::del_instance(PluginLV2 *p)
{
	delete static_cast<Dsp*>(p);
}

/*
typedef enum
{
   BASS, 
   DEPTH, 
   MRBSELECT, 
   MRB, 
   REVERBLEVEL, 
   REVERB, 
   SPEED, 
   TREBLE, 
   VIBE, 
   VOLUME, 
} PortIndex;
*/

} // end namespace vmk2d
